/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.node;

import java.util.*;
import sarapatel.analysis.*;

@SuppressWarnings("nls")
public final class APrograma extends PPrograma
{
    private final LinkedList<PDecsVarConst> _decsVarConst_ = new LinkedList<PDecsVarConst>();
    private final LinkedList<PDecsProcFunc> _decsProcFunc_ = new LinkedList<PDecsProcFunc>();

    public APrograma()
    {
        // Constructor
    }

    public APrograma(
        @SuppressWarnings("hiding") List<?> _decsVarConst_,
        @SuppressWarnings("hiding") List<?> _decsProcFunc_)
    {
        // Constructor
        setDecsVarConst(_decsVarConst_);

        setDecsProcFunc(_decsProcFunc_);

    }

    @Override
    public Object clone()
    {
        return new APrograma(
            cloneList(this._decsVarConst_),
            cloneList(this._decsProcFunc_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPrograma(this);
    }

    public LinkedList<PDecsVarConst> getDecsVarConst()
    {
        return this._decsVarConst_;
    }

    public void setDecsVarConst(List<?> list)
    {
        for(PDecsVarConst e : this._decsVarConst_)
        {
            e.parent(null);
        }
        this._decsVarConst_.clear();

        for(Object obj_e : list)
        {
            PDecsVarConst e = (PDecsVarConst) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._decsVarConst_.add(e);
        }
    }

    public LinkedList<PDecsProcFunc> getDecsProcFunc()
    {
        return this._decsProcFunc_;
    }

    public void setDecsProcFunc(List<?> list)
    {
        for(PDecsProcFunc e : this._decsProcFunc_)
        {
            e.parent(null);
        }
        this._decsProcFunc_.clear();

        for(Object obj_e : list)
        {
            PDecsProcFunc e = (PDecsProcFunc) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._decsProcFunc_.add(e);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._decsVarConst_)
            + toString(this._decsProcFunc_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._decsVarConst_.remove(child))
        {
            return;
        }

        if(this._decsProcFunc_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        for(ListIterator<PDecsVarConst> i = this._decsVarConst_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PDecsVarConst) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        for(ListIterator<PDecsProcFunc> i = this._decsProcFunc_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PDecsProcFunc) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
