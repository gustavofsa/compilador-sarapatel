/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.node;

import sarapatel.analysis.*;

@SuppressWarnings("nls")
public final class AArrayComp extends PArrayComp
{
    private TColEsq _colEsq_;
    private TId _id_;
    private TSeparador _separador_;
    private PExp _exp_;
    private TColDir _colDir_;

    public AArrayComp()
    {
        // Constructor
    }

    public AArrayComp(
        @SuppressWarnings("hiding") TColEsq _colEsq_,
        @SuppressWarnings("hiding") TId _id_,
        @SuppressWarnings("hiding") TSeparador _separador_,
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") TColDir _colDir_)
    {
        // Constructor
        setColEsq(_colEsq_);

        setId(_id_);

        setSeparador(_separador_);

        setExp(_exp_);

        setColDir(_colDir_);

    }

    @Override
    public Object clone()
    {
        return new AArrayComp(
            cloneNode(this._colEsq_),
            cloneNode(this._id_),
            cloneNode(this._separador_),
            cloneNode(this._exp_),
            cloneNode(this._colDir_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAArrayComp(this);
    }

    public TColEsq getColEsq()
    {
        return this._colEsq_;
    }

    public void setColEsq(TColEsq node)
    {
        if(this._colEsq_ != null)
        {
            this._colEsq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._colEsq_ = node;
    }

    public TId getId()
    {
        return this._id_;
    }

    public void setId(TId node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    public TSeparador getSeparador()
    {
        return this._separador_;
    }

    public void setSeparador(TSeparador node)
    {
        if(this._separador_ != null)
        {
            this._separador_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._separador_ = node;
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public TColDir getColDir()
    {
        return this._colDir_;
    }

    public void setColDir(TColDir node)
    {
        if(this._colDir_ != null)
        {
            this._colDir_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._colDir_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._colEsq_)
            + toString(this._id_)
            + toString(this._separador_)
            + toString(this._exp_)
            + toString(this._colDir_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._colEsq_ == child)
        {
            this._colEsq_ = null;
            return;
        }

        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        if(this._separador_ == child)
        {
            this._separador_ = null;
            return;
        }

        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._colDir_ == child)
        {
            this._colDir_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._colEsq_ == oldChild)
        {
            setColEsq((TColEsq) newChild);
            return;
        }

        if(this._id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        if(this._separador_ == oldChild)
        {
            setSeparador((TSeparador) newChild);
            return;
        }

        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._colDir_ == oldChild)
        {
            setColDir((TColDir) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
