/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.node;

import sarapatel.analysis.*;

@SuppressWarnings("nls")
public final class AMenosExpSomaSub extends PExpSomaSub
{
    private PExpSomaSub _expSomaSub_;
    private TMenos _menos_;
    private PFator _fator_;

    public AMenosExpSomaSub()
    {
        // Constructor
    }

    public AMenosExpSomaSub(
        @SuppressWarnings("hiding") PExpSomaSub _expSomaSub_,
        @SuppressWarnings("hiding") TMenos _menos_,
        @SuppressWarnings("hiding") PFator _fator_)
    {
        // Constructor
        setExpSomaSub(_expSomaSub_);

        setMenos(_menos_);

        setFator(_fator_);

    }

    @Override
    public Object clone()
    {
        return new AMenosExpSomaSub(
            cloneNode(this._expSomaSub_),
            cloneNode(this._menos_),
            cloneNode(this._fator_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMenosExpSomaSub(this);
    }

    public PExpSomaSub getExpSomaSub()
    {
        return this._expSomaSub_;
    }

    public void setExpSomaSub(PExpSomaSub node)
    {
        if(this._expSomaSub_ != null)
        {
            this._expSomaSub_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expSomaSub_ = node;
    }

    public TMenos getMenos()
    {
        return this._menos_;
    }

    public void setMenos(TMenos node)
    {
        if(this._menos_ != null)
        {
            this._menos_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._menos_ = node;
    }

    public PFator getFator()
    {
        return this._fator_;
    }

    public void setFator(PFator node)
    {
        if(this._fator_ != null)
        {
            this._fator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fator_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expSomaSub_)
            + toString(this._menos_)
            + toString(this._fator_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expSomaSub_ == child)
        {
            this._expSomaSub_ = null;
            return;
        }

        if(this._menos_ == child)
        {
            this._menos_ = null;
            return;
        }

        if(this._fator_ == child)
        {
            this._fator_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expSomaSub_ == oldChild)
        {
            setExpSomaSub((PExpSomaSub) newChild);
            return;
        }

        if(this._menos_ == oldChild)
        {
            setMenos((TMenos) newChild);
            return;
        }

        if(this._fator_ == oldChild)
        {
            setFator((PFator) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
