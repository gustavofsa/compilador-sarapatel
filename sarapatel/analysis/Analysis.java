/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.analysis;

import node.*;
import sarapatel.node.AArrayComp;
import sarapatel.node.ADecCons;
import sarapatel.node.ADecConsDecs;
import sarapatel.node.ADecVar;
import sarapatel.node.ADecVarDecs;
import sarapatel.node.ADivFator;
import sarapatel.node.AExpIdExp;
import sarapatel.node.AExpTermo;
import sarapatel.node.AFatorExp;
import sarapatel.node.AIdAtribuicao;
import sarapatel.node.AIdAtribuicaoIds;
import sarapatel.node.AIdIdExp;
import sarapatel.node.AIdIds;
import sarapatel.node.AMenosExp;
import sarapatel.node.AModFator;
import sarapatel.node.AMultFator;
import sarapatel.node.ANumeroTermo;
import sarapatel.node.AParametro;
import sarapatel.node.AParametroSeparadorParametro;
import sarapatel.node.AParametroSeparadorParametroSeparadorParametroVazio;
import sarapatel.node.AParametros;
import sarapatel.node.APrograma;
import sarapatel.node.ASeparadorParametro;
import sarapatel.node.ASomaExp;
import sarapatel.node.ATermoFator;
import sarapatel.node.ATipoBaseTipo;
import sarapatel.node.ATipoBaseTipoParametro;
import sarapatel.node.ATipoBooleanoTipoBase;
import sarapatel.node.ATipoCadeiaTipoBase;
import sarapatel.node.ATipoInteiroTipoBase;
import sarapatel.node.ATipoParametroTipoParametro;
import sarapatel.node.ATipoRealTipoBase;
import sarapatel.node.ATipoTipo;
import sarapatel.node.AVazioSeparadorParametroVazio;
import sarapatel.node.EOF;
import sarapatel.node.InvalidToken;
import sarapatel.node.Node;
import sarapatel.node.Start;
import sarapatel.node.Switch;
import sarapatel.node.TAtribuicao;
import sarapatel.node.TCadeia;
import sarapatel.node.TColDir;
import sarapatel.node.TColEsq;
import sarapatel.node.TComentario;
import sarapatel.node.TConst;
import sarapatel.node.TDecimal;
import sarapatel.node.TDiv;
import sarapatel.node.TDoisPontos;
import sarapatel.node.TE;
import sarapatel.node.TEnquanto;
import sarapatel.node.TFalso;
import sarapatel.node.TFimBloco;
import sarapatel.node.TFuncao;
import sarapatel.node.TId;
import sarapatel.node.TIgual;
import sarapatel.node.TIniBloco;
import sarapatel.node.TMaiorIgual;
import sarapatel.node.TMaiorQ;
import sarapatel.node.TMenos;
import sarapatel.node.TMod;
import sarapatel.node.TMult;
import sarapatel.node.TNao;
import sarapatel.node.TNumero;
import sarapatel.node.TOu;
import sarapatel.node.TParDir;
import sarapatel.node.TParEsq;
import sarapatel.node.TPontoVirgula;
import sarapatel.node.TProcedPrincipal;
import sarapatel.node.TProcedimento;
import sarapatel.node.TSe;
import sarapatel.node.TSenao;
import sarapatel.node.TSeparador;
import sarapatel.node.TSoma;
import sarapatel.node.TTipoArray;
import sarapatel.node.TTipoBooleano;
import sarapatel.node.TTipoCadeia;
import sarapatel.node.TTipoInteiro;
import sarapatel.node.TTipoReal;
import sarapatel.node.TVar;
import sarapatel.node.TVazio;
import sarapatel.node.TVerdadeiro;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAPrograma(APrograma node);
    void caseADecVarDecs(ADecVarDecs node);
    void caseADecConsDecs(ADecConsDecs node);
    void caseADecCons(ADecCons node);
    void caseADecVar(ADecVar node);
    void caseAIdIds(AIdIds node);
    void caseAIdAtribuicaoIds(AIdAtribuicaoIds node);
    void caseATipoBaseTipo(ATipoBaseTipo node);
    void caseATipoTipo(ATipoTipo node);
    void caseATipoInteiroTipoBase(ATipoInteiroTipoBase node);
    void caseATipoBooleanoTipoBase(ATipoBooleanoTipoBase node);
    void caseATipoRealTipoBase(ATipoRealTipoBase node);
    void caseATipoCadeiaTipoBase(ATipoCadeiaTipoBase node);
    void caseAIdAtribuicao(AIdAtribuicao node);
    void caseAArrayComp(AArrayComp node);
    void caseAParametros(AParametros node);
    void caseAParametroSeparadorParametroSeparadorParametroVazio(AParametroSeparadorParametroSeparadorParametroVazio node);
    void caseAVazioSeparadorParametroVazio(AVazioSeparadorParametroVazio node);
    void caseAParametroSeparadorParametro(AParametroSeparadorParametro node);
    void caseASeparadorParametro(ASeparadorParametro node);
    void caseAParametro(AParametro node);
    void caseATipoBaseTipoParametro(ATipoBaseTipoParametro node);
    void caseATipoParametroTipoParametro(ATipoParametroTipoParametro node);
    void caseAIdIdExp(AIdIdExp node);
    void caseAExpIdExp(AExpIdExp node);
    void caseAFatorExp(AFatorExp node);
    void caseASomaExp(ASomaExp node);
    void caseAMenosExp(AMenosExp node);
    void caseATermoFator(ATermoFator node);
    void caseAMultFator(AMultFator node);
    void caseADivFator(ADivFator node);
    void caseAModFator(AModFator node);
    void caseANumeroTermo(ANumeroTermo node);
    void caseAExpTermo(AExpTermo node);

    void caseTNumero(TNumero node);
    void caseTDecimal(TDecimal node);
    void caseTPontoVirgula(TPontoVirgula node);
    void caseTColEsq(TColEsq node);
    void caseTColDir(TColDir node);
    void caseTParEsq(TParEsq node);
    void caseTParDir(TParDir node);
    void caseTSoma(TSoma node);
    void caseTMenos(TMenos node);
    void caseTMult(TMult node);
    void caseTDiv(TDiv node);
    void caseTMod(TMod node);
    void caseTMaiorQ(TMaiorQ node);
    void caseTMaiorIgual(TMaiorIgual node);
    void caseTIgual(TIgual node);
    void caseTE(TE node);
    void caseTOu(TOu node);
    void caseTNao(TNao node);
    void caseTSeparador(TSeparador node);
    void caseTDoisPontos(TDoisPontos node);
    void caseTAtribuicao(TAtribuicao node);
    void caseTProcedPrincipal(TProcedPrincipal node);
    void caseTVar(TVar node);
    void caseTConst(TConst node);
    void caseTTipoInteiro(TTipoInteiro node);
    void caseTTipoReal(TTipoReal node);
    void caseTTipoBooleano(TTipoBooleano node);
    void caseTTipoCadeia(TTipoCadeia node);
    void caseTIniBloco(TIniBloco node);
    void caseTFimBloco(TFimBloco node);
    void caseTEnquanto(TEnquanto node);
    void caseTSe(TSe node);
    void caseTSenao(TSenao node);
    void caseTVerdadeiro(TVerdadeiro node);
    void caseTFalso(TFalso node);
    void caseTFuncao(TFuncao node);
    void caseTProcedimento(TProcedimento node);
    void caseTTipoArray(TTipoArray node);
    void caseTId(TId node);
    void caseTCadeia(TCadeia node);
    void caseTVazio(TVazio node);
    void caseTComentario(TComentario node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
