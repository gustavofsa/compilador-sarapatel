/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.analysis;

import java.util.*;
import node.*;
import sarapatel.node.AArrayComp;
import sarapatel.node.ADecCons;
import sarapatel.node.ADecConsDecs;
import sarapatel.node.ADecVar;
import sarapatel.node.ADecVarDecs;
import sarapatel.node.ADivFator;
import sarapatel.node.AExpIdExp;
import sarapatel.node.AExpTermo;
import sarapatel.node.AFatorExp;
import sarapatel.node.AIdAtribuicao;
import sarapatel.node.AIdAtribuicaoIds;
import sarapatel.node.AIdIdExp;
import sarapatel.node.AIdIds;
import sarapatel.node.AMenosExp;
import sarapatel.node.AModFator;
import sarapatel.node.AMultFator;
import sarapatel.node.ANumeroTermo;
import sarapatel.node.AParametro;
import sarapatel.node.AParametroSeparadorParametro;
import sarapatel.node.AParametroSeparadorParametroSeparadorParametroVazio;
import sarapatel.node.AParametros;
import sarapatel.node.APrograma;
import sarapatel.node.ASeparadorParametro;
import sarapatel.node.ASomaExp;
import sarapatel.node.ATermoFator;
import sarapatel.node.ATipoBaseTipo;
import sarapatel.node.ATipoBaseTipoParametro;
import sarapatel.node.ATipoBooleanoTipoBase;
import sarapatel.node.ATipoCadeiaTipoBase;
import sarapatel.node.ATipoInteiroTipoBase;
import sarapatel.node.ATipoParametroTipoParametro;
import sarapatel.node.ATipoRealTipoBase;
import sarapatel.node.ATipoTipo;
import sarapatel.node.AVazioSeparadorParametroVazio;
import sarapatel.node.EOF;
import sarapatel.node.InvalidToken;
import sarapatel.node.Node;
import sarapatel.node.Start;
import sarapatel.node.TAtribuicao;
import sarapatel.node.TCadeia;
import sarapatel.node.TColDir;
import sarapatel.node.TColEsq;
import sarapatel.node.TComentario;
import sarapatel.node.TConst;
import sarapatel.node.TDecimal;
import sarapatel.node.TDiv;
import sarapatel.node.TDoisPontos;
import sarapatel.node.TE;
import sarapatel.node.TEnquanto;
import sarapatel.node.TFalso;
import sarapatel.node.TFimBloco;
import sarapatel.node.TFuncao;
import sarapatel.node.TId;
import sarapatel.node.TIgual;
import sarapatel.node.TIniBloco;
import sarapatel.node.TMaiorIgual;
import sarapatel.node.TMaiorQ;
import sarapatel.node.TMenos;
import sarapatel.node.TMod;
import sarapatel.node.TMult;
import sarapatel.node.TNao;
import sarapatel.node.TNumero;
import sarapatel.node.TOu;
import sarapatel.node.TParDir;
import sarapatel.node.TParEsq;
import sarapatel.node.TPontoVirgula;
import sarapatel.node.TProcedPrincipal;
import sarapatel.node.TProcedimento;
import sarapatel.node.TSe;
import sarapatel.node.TSenao;
import sarapatel.node.TSeparador;
import sarapatel.node.TSoma;
import sarapatel.node.TTipoArray;
import sarapatel.node.TTipoBooleano;
import sarapatel.node.TTipoCadeia;
import sarapatel.node.TTipoInteiro;
import sarapatel.node.TTipoReal;
import sarapatel.node.TVar;
import sarapatel.node.TVazio;
import sarapatel.node.TVerdadeiro;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrograma(APrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecVarDecs(ADecVarDecs node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecConsDecs(ADecConsDecs node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecCons(ADecCons node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecVar(ADecVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdIds(AIdIds node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdAtribuicaoIds(AIdAtribuicaoIds node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATipoBaseTipo(ATipoBaseTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATipoTipo(ATipoTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATipoInteiroTipoBase(ATipoInteiroTipoBase node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATipoBooleanoTipoBase(ATipoBooleanoTipoBase node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATipoRealTipoBase(ATipoRealTipoBase node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATipoCadeiaTipoBase(ATipoCadeiaTipoBase node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdAtribuicao(AIdAtribuicao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArrayComp(AArrayComp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParametros(AParametros node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParametroSeparadorParametroSeparadorParametroVazio(AParametroSeparadorParametroSeparadorParametroVazio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVazioSeparadorParametroVazio(AVazioSeparadorParametroVazio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParametroSeparadorParametro(AParametroSeparadorParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeparadorParametro(ASeparadorParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParametro(AParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATipoBaseTipoParametro(ATipoBaseTipoParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATipoParametroTipoParametro(ATipoParametroTipoParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdIdExp(AIdIdExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpIdExp(AExpIdExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFatorExp(AFatorExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASomaExp(ASomaExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenosExp(AMenosExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATermoFator(ATermoFator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultFator(AMultFator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivFator(ADivFator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAModFator(AModFator node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumeroTermo(ANumeroTermo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpTermo(AExpTermo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumero(TNumero node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDecimal(TDecimal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPontoVirgula(TPontoVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTColEsq(TColEsq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTColDir(TColDir node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParEsq(TParEsq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParDir(TParDir node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSoma(TSoma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenos(TMenos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaiorQ(TMaiorQ node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaiorIgual(TMaiorIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgual(TIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTE(TE node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOu(TOu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNao(TNao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSeparador(TSeparador node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDoisPontos(TDoisPontos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAtribuicao(TAtribuicao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTProcedPrincipal(TProcedPrincipal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVar(TVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTConst(TConst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTipoInteiro(TTipoInteiro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTipoReal(TTipoReal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTipoBooleano(TTipoBooleano node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTipoCadeia(TTipoCadeia node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIniBloco(TIniBloco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFimBloco(TFimBloco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEnquanto(TEnquanto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSe(TSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSenao(TSenao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVerdadeiro(TVerdadeiro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFalso(TFalso node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFuncao(TFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTProcedimento(TProcedimento node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTipoArray(TTipoArray node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCadeia(TCadeia node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVazio(TVazio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentario(TComentario node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
