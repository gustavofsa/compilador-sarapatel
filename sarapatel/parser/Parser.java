/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.parser;

import sarapatel.lexer.*;
import sarapatel.node.*;
import sarapatel.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    @SuppressWarnings({"unchecked","unused"})
    private void push(int numstate, ArrayList<Object> listNode) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PPrograma node1 = (PPrograma) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce AAprograma1Programa */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list);
            }
            break;
            case 1: /* reduce AAprograma2Programa */
            {
                ArrayList<Object> list = new1();
                push(goTo(0), list);
            }
            break;
            case 2: /* reduce ADecVarDecsVarConst */
            {
                ArrayList<Object> list = new2();
                push(goTo(1), list);
            }
            break;
            case 3: /* reduce ADecConsDecsVarConst */
            {
                ArrayList<Object> list = new3();
                push(goTo(1), list);
            }
            break;
            case 4: /* reduce ADecProcedimentoDecsProcFunc */
            {
                ArrayList<Object> list = new4();
                push(goTo(2), list);
            }
            break;
            case 5: /* reduce ADecFuncaoDecsProcFunc */
            {
                ArrayList<Object> list = new5();
                push(goTo(2), list);
            }
            break;
            case 6: /* reduce ADecCons */
            {
                ArrayList<Object> list = new6();
                push(goTo(3), list);
            }
            break;
            case 7: /* reduce ADecVar */
            {
                ArrayList<Object> list = new7();
                push(goTo(4), list);
            }
            break;
            case 8: /* reduce AIdIds */
            {
                ArrayList<Object> list = new8();
                push(goTo(5), list);
            }
            break;
            case 9: /* reduce AIdAtribuicaoIds */
            {
                ArrayList<Object> list = new9();
                push(goTo(5), list);
            }
            break;
            case 10: /* reduce ATipoBaseTipo */
            {
                ArrayList<Object> list = new10();
                push(goTo(6), list);
            }
            break;
            case 11: /* reduce ATipoArrTipo */
            {
                ArrayList<Object> list = new11();
                push(goTo(6), list);
            }
            break;
            case 12: /* reduce ATipoInteiroTipoBase */
            {
                ArrayList<Object> list = new12();
                push(goTo(7), list);
            }
            break;
            case 13: /* reduce ATipoBooleanoTipoBase */
            {
                ArrayList<Object> list = new13();
                push(goTo(7), list);
            }
            break;
            case 14: /* reduce ATipoRealTipoBase */
            {
                ArrayList<Object> list = new14();
                push(goTo(7), list);
            }
            break;
            case 15: /* reduce ATipoCadeiaTipoBase */
            {
                ArrayList<Object> list = new15();
                push(goTo(7), list);
            }
            break;
            case 16: /* reduce AIdAtribuicao */
            {
                ArrayList<Object> list = new16();
                push(goTo(8), list);
            }
            break;
            case 17: /* reduce AArrayComp */
            {
                ArrayList<Object> list = new17();
                push(goTo(9), list);
            }
            break;
            case 18: /* reduce AAblococomandos1BlocoComandos */
            {
                ArrayList<Object> list = new18();
                push(goTo(10), list);
            }
            break;
            case 19: /* reduce AAblococomandos2BlocoComandos */
            {
                ArrayList<Object> list = new19();
                push(goTo(10), list);
            }
            break;
            case 20: /* reduce AAblococomandos3BlocoComandos */
            {
                ArrayList<Object> list = new20();
                push(goTo(10), list);
            }
            break;
            case 21: /* reduce AAblococomandos4BlocoComandos */
            {
                ArrayList<Object> list = new21();
                push(goTo(10), list);
            }
            break;
            case 22: /* reduce AAdecprocedimento1DecProcedimento */
            {
                ArrayList<Object> list = new22();
                push(goTo(11), list);
            }
            break;
            case 23: /* reduce AAdecprocedimento2DecProcedimento */
            {
                ArrayList<Object> list = new23();
                push(goTo(11), list);
            }
            break;
            case 24: /* reduce ADecFuncao */
            {
                ArrayList<Object> list = new24();
                push(goTo(12), list);
            }
            break;
            case 25: /* reduce AAparametroseparadorparametroparametros1Parametros */
            {
                ArrayList<Object> list = new25();
                push(goTo(13), list);
            }
            break;
            case 26: /* reduce AAparametroseparadorparametroparametros2Parametros */
            {
                ArrayList<Object> list = new26();
                push(goTo(13), list);
            }
            break;
            case 27: /* reduce AVazioParametros */
            {
                ArrayList<Object> list = new27();
                push(goTo(13), list);
            }
            break;
            case 28: /* reduce ASeparadorParametro */
            {
                ArrayList<Object> list = new28();
                push(goTo(14), list);
            }
            break;
            case 29: /* reduce AParametro */
            {
                ArrayList<Object> list = new29();
                push(goTo(15), list);
            }
            break;
            case 30: /* reduce ATipoBaseTipoParametro */
            {
                ArrayList<Object> list = new30();
                push(goTo(16), list);
            }
            break;
            case 31: /* reduce ATipoParametroTipoParametro */
            {
                ArrayList<Object> list = new31();
                push(goTo(16), list);
            }
            break;
            case 32: /* reduce AIdIdExp */
            {
                ArrayList<Object> list = new32();
                push(goTo(17), list);
            }
            break;
            case 33: /* reduce AExpIdExp */
            {
                ArrayList<Object> list = new33();
                push(goTo(17), list);
            }
            break;
            case 34: /* reduce AIdValor */
            {
                ArrayList<Object> list = new34();
                push(goTo(18), list);
            }
            break;
            case 35: /* reduce AValorValor */
            {
                ArrayList<Object> list = new35();
                push(goTo(18), list);
            }
            break;
            case 36: /* reduce AAlistaexplistaexp11ChamadaProcedimento */
            {
                ArrayList<Object> list = new36();
                push(goTo(19), list);
            }
            break;
            case 37: /* reduce AAlistaexplistaexp21ChamadaProcedimento */
            {
                ArrayList<Object> list = new37();
                push(goTo(19), list);
            }
            break;
            case 38: /* reduce AAblocoexpressoes1BlocoExpressoes */
            {
                ArrayList<Object> list = new38();
                push(goTo(20), list);
            }
            break;
            case 39: /* reduce AAblocoexpressoes2BlocoExpressoes */
            {
                ArrayList<Object> list = new39();
                push(goTo(20), list);
            }
            break;
            case 40: /* reduce ADeclaracaoAbertaComando */
            {
                ArrayList<Object> list = new40();
                push(goTo(21), list);
            }
            break;
            case 41: /* reduce ADeclaracaoFechadaComando */
            {
                ArrayList<Object> list = new41();
                push(goTo(21), list);
            }
            break;
            case 42: /* reduce ACondSeDeclAberta */
            {
                ArrayList<Object> list = new42();
                push(goTo(22), list);
            }
            break;
            case 43: /* reduce ACondSeAbertaDeclAberta */
            {
                ArrayList<Object> list = new43();
                push(goTo(22), list);
            }
            break;
            case 44: /* reduce ACondSeSenaoAbertaDeclAberta */
            {
                ArrayList<Object> list = new44();
                push(goTo(22), list);
            }
            break;
            case 45: /* reduce AEnquantoAbertoDeclAberta */
            {
                ArrayList<Object> list = new45();
                push(goTo(22), list);
            }
            break;
            case 46: /* reduce ATudoMenosSeDeclFechada */
            {
                ArrayList<Object> list = new46();
                push(goTo(23), list);
            }
            break;
            case 47: /* reduce ACondSeSenaoFechadaDeclFechada */
            {
                ArrayList<Object> list = new47();
                push(goTo(23), list);
            }
            break;
            case 48: /* reduce AEnquantoFechadoDeclFechada */
            {
                ArrayList<Object> list = new48();
                push(goTo(23), list);
            }
            break;
            case 49: /* reduce AOutra1TudoMenosSe */
            {
                ArrayList<Object> list = new49();
                push(goTo(24), list);
            }
            break;
            case 50: /* reduce AOutra2TudoMenosSe */
            {
                ArrayList<Object> list = new50();
                push(goTo(24), list);
            }
            break;
            case 51: /* reduce AOutra3TudoMenosSe */
            {
                ArrayList<Object> list = new51();
                push(goTo(24), list);
            }
            break;
            case 52: /* reduce AArrayCompExp */
            {
                ArrayList<Object> list = new52();
                push(goTo(25), list);
            }
            break;
            case 53: /* reduce ATernarioExp */
            {
                ArrayList<Object> list = new53();
                push(goTo(25), list);
            }
            break;
            case 54: /* reduce AOrExp */
            {
                ArrayList<Object> list = new54();
                push(goTo(25), list);
            }
            break;
            case 55: /* reduce AAndExp */
            {
                ArrayList<Object> list = new55();
                push(goTo(25), list);
            }
            break;
            case 56: /* reduce AIgualExp */
            {
                ArrayList<Object> list = new56();
                push(goTo(25), list);
            }
            break;
            case 57: /* reduce AMaiorIgualExp */
            {
                ArrayList<Object> list = new57();
                push(goTo(25), list);
            }
            break;
            case 58: /* reduce AMaiorExp */
            {
                ArrayList<Object> list = new58();
                push(goTo(25), list);
            }
            break;
            case 59: /* reduce AExpSomaSubExp */
            {
                ArrayList<Object> list = new59();
                push(goTo(25), list);
            }
            break;
            case 60: /* reduce AFatorExpSomaSub */
            {
                ArrayList<Object> list = new60();
                push(goTo(26), list);
            }
            break;
            case 61: /* reduce ASomaExpSomaSub */
            {
                ArrayList<Object> list = new61();
                push(goTo(26), list);
            }
            break;
            case 62: /* reduce AMenosExpSomaSub */
            {
                ArrayList<Object> list = new62();
                push(goTo(26), list);
            }
            break;
            case 63: /* reduce ATermoFator */
            {
                ArrayList<Object> list = new63();
                push(goTo(27), list);
            }
            break;
            case 64: /* reduce AMultFator */
            {
                ArrayList<Object> list = new64();
                push(goTo(27), list);
            }
            break;
            case 65: /* reduce ADivFator */
            {
                ArrayList<Object> list = new65();
                push(goTo(27), list);
            }
            break;
            case 66: /* reduce AModFator */
            {
                ArrayList<Object> list = new66();
                push(goTo(27), list);
            }
            break;
            case 67: /* reduce AValorTermo */
            {
                ArrayList<Object> list = new67();
                push(goTo(28), list);
            }
            break;
            case 68: /* reduce AChamadaFuncaoTermo */
            {
                ArrayList<Object> list = new68();
                push(goTo(28), list);
            }
            break;
            case 69: /* reduce AExpTermo */
            {
                ArrayList<Object> list = new69();
                push(goTo(28), list);
            }
            break;
            case 70: /* reduce ABlocoExpTermo */
            {
                ArrayList<Object> list = new70();
                push(goTo(28), list);
            }
            break;
            case 71: /* reduce AMenosTermoTermo */
            {
                ArrayList<Object> list = new71();
                push(goTo(28), list);
            }
            break;
            case 72: /* reduce ATipagemTermo */
            {
                ArrayList<Object> list = new72();
                push(goTo(28), list);
            }
            break;
            case 73: /* reduce AIntTipagem */
            {
                ArrayList<Object> list = new73();
                push(goTo(29), list);
            }
            break;
            case 74: /* reduce ARealTipagem */
            {
                ArrayList<Object> list = new74();
                push(goTo(29), list);
            }
            break;
            case 75: /* reduce AStringTipagem */
            {
                ArrayList<Object> list = new75();
                push(goTo(29), list);
            }
            break;
            case 76: /* reduce ABoolTipagem */
            {
                ArrayList<Object> list = new76();
                push(goTo(29), list);
            }
            break;
            case 77: /* reduce AChamadaFuncaoaAlistaexplistaexp11ChamadaFuncao */
            {
                ArrayList<Object> list = new77();
                push(goTo(30), list);
            }
            break;
            case 78: /* reduce AChamadaFuncaoaAlistaexplistaexp21ChamadaFuncao */
            {
                ArrayList<Object> list = new78();
                push(goTo(30), list);
            }
            break;
            case 79: /* reduce AAlistaexpvazialistaexpvazia1ListaExpVazia */
            {
                ArrayList<Object> list = new79();
                push(goTo(31), list);
            }
            break;
            case 80: /* reduce AAlistaexpvazialistaexpvazia2ListaExpVazia */
            {
                ArrayList<Object> list = new80();
                push(goTo(31), list);
            }
            break;
            case 81: /* reduce ASeparadorExpSeparadorExp */
            {
                ArrayList<Object> list = new81();
                push(goTo(32), list);
            }
            break;
            case 82: /* reduce ATerminalADecsProcFunc */
            {
                ArrayList<Object> list = new82();
                push(goTo(33), list);
            }
            break;
            case 83: /* reduce ANonTerminalADecsProcFunc */
            {
                ArrayList<Object> list = new83();
                push(goTo(33), list);
            }
            break;
            case 84: /* reduce ATerminalADecsVarConst */
            {
                ArrayList<Object> list = new84();
                push(goTo(34), list);
            }
            break;
            case 85: /* reduce ANonTerminalADecsVarConst */
            {
                ArrayList<Object> list = new85();
                push(goTo(34), list);
            }
            break;
            case 86: /* reduce ATerminalAComando */
            {
                ArrayList<Object> list = new86();
                push(goTo(35), list);
            }
            break;
            case 87: /* reduce ANonTerminalAComando */
            {
                ArrayList<Object> list = new87();
                push(goTo(35), list);
            }
            break;
            case 88: /* reduce ATerminalASeparadorParametro */
            {
                ArrayList<Object> list = new88();
                push(goTo(36), list);
            }
            break;
            case 89: /* reduce ANonTerminalASeparadorParametro */
            {
                ArrayList<Object> list = new89();
                push(goTo(36), list);
            }
            break;
            case 90: /* reduce ATerminalADecCons */
            {
                ArrayList<Object> list = new90();
                push(goTo(37), list);
            }
            break;
            case 91: /* reduce ANonTerminalADecCons */
            {
                ArrayList<Object> list = new91();
                push(goTo(37), list);
            }
            break;
            case 92: /* reduce ATerminalASeparadorExp */
            {
                ArrayList<Object> list = new92();
                push(goTo(38), list);
            }
            break;
            case 93: /* reduce ANonTerminalASeparadorExp */
            {
                ArrayList<Object> list = new93();
                push(goTo(38), list);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce AAprograma1Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        {
            // Block
        }
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList1.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pprogramaNode1 = new APrograma(listNode2, listNode4);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AAprograma2Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        pprogramaNode1 = new APrograma(listNode3, listNode5);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce ADecVarDecsVarConst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecsVarConst pdecsvarconstNode1;
        {
            // Block
        PDecVar pdecvarNode2;
        pdecvarNode2 = (PDecVar)nodeArrayList1.get(0);

        pdecsvarconstNode1 = new ADecVarDecsVarConst(pdecvarNode2);
        }
	nodeList.add(pdecsvarconstNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce ADecConsDecsVarConst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecsVarConst pdecsvarconstNode1;
        {
            // Block
        PDecCons pdecconsNode2;
        pdecconsNode2 = (PDecCons)nodeArrayList1.get(0);

        pdecsvarconstNode1 = new ADecConsDecsVarConst(pdecconsNode2);
        }
	nodeList.add(pdecsvarconstNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce ADecProcedimentoDecsProcFunc */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecsProcFunc pdecsprocfuncNode1;
        {
            // Block
        PDecProcedimento pdecprocedimentoNode2;
        pdecprocedimentoNode2 = (PDecProcedimento)nodeArrayList1.get(0);

        pdecsprocfuncNode1 = new ADecProcedimentoDecsProcFunc(pdecprocedimentoNode2);
        }
	nodeList.add(pdecsprocfuncNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce ADecFuncaoDecsProcFunc */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecsProcFunc pdecsprocfuncNode1;
        {
            // Block
        PDecFuncao pdecfuncaoNode2;
        pdecfuncaoNode2 = (PDecFuncao)nodeArrayList1.get(0);

        pdecsprocfuncNode1 = new ADecFuncaoDecsProcFunc(pdecfuncaoNode2);
        }
	nodeList.add(pdecsprocfuncNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce ADecCons */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecCons pdecconsNode1;
        {
            // Block
        TConst tconstNode2;
        TDoisPontos tdoispontosNode3;
        PTipo ptipoNode4;
        PIdAtribuicao pidatribuicaoNode5;
        TPontoVirgula tpontovirgulaNode6;
        tconstNode2 = (TConst)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        ptipoNode4 = (PTipo)nodeArrayList3.get(0);
        pidatribuicaoNode5 = (PIdAtribuicao)nodeArrayList4.get(0);
        tpontovirgulaNode6 = (TPontoVirgula)nodeArrayList5.get(0);

        pdecconsNode1 = new ADecCons(tconstNode2, tdoispontosNode3, ptipoNode4, pidatribuicaoNode5, tpontovirgulaNode6);
        }
	nodeList.add(pdecconsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce ADecVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecVar pdecvarNode1;
        {
            // Block
        TVar tvarNode2;
        TDoisPontos tdoispontosNode3;
        PTipo ptipoNode4;
        PIds pidsNode5;
        TPontoVirgula tpontovirgulaNode6;
        tvarNode2 = (TVar)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        ptipoNode4 = (PTipo)nodeArrayList3.get(0);
        pidsNode5 = (PIds)nodeArrayList4.get(0);
        tpontovirgulaNode6 = (TPontoVirgula)nodeArrayList5.get(0);

        pdecvarNode1 = new ADecVar(tvarNode2, tdoispontosNode3, ptipoNode4, pidsNode5, tpontovirgulaNode6);
        }
	nodeList.add(pdecvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce AIdIds */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIds pidsNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList1.get(0);

        pidsNode1 = new AIdIds(tidNode2);
        }
	nodeList.add(pidsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce AIdAtribuicaoIds */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIds pidsNode1;
        {
            // Block
        PIdAtribuicao pidatribuicaoNode2;
        pidatribuicaoNode2 = (PIdAtribuicao)nodeArrayList1.get(0);

        pidsNode1 = new AIdAtribuicaoIds(pidatribuicaoNode2);
        }
	nodeList.add(pidsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce ATipoBaseTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        PTipoBase ptipobaseNode2;
        ptipobaseNode2 = (PTipoBase)nodeArrayList1.get(0);

        ptipoNode1 = new ATipoBaseTipo(ptipobaseNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce ATipoArrTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        PTipoBase ptipobaseNode2;
        TColEsq tcolesqNode3;
        PExp pexpNode4;
        TColDir tcoldirNode5;
        ptipobaseNode2 = (PTipoBase)nodeArrayList1.get(0);
        tcolesqNode3 = (TColEsq)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tcoldirNode5 = (TColDir)nodeArrayList4.get(0);

        ptipoNode1 = new ATipoArrTipo(ptipobaseNode2, tcolesqNode3, pexpNode4, tcoldirNode5);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce ATipoInteiroTipoBase */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoBase ptipobaseNode1;
        {
            // Block
        TTipoInteiro ttipointeiroNode2;
        ttipointeiroNode2 = (TTipoInteiro)nodeArrayList1.get(0);

        ptipobaseNode1 = new ATipoInteiroTipoBase(ttipointeiroNode2);
        }
	nodeList.add(ptipobaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce ATipoBooleanoTipoBase */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoBase ptipobaseNode1;
        {
            // Block
        TTipoBooleano ttipobooleanoNode2;
        ttipobooleanoNode2 = (TTipoBooleano)nodeArrayList1.get(0);

        ptipobaseNode1 = new ATipoBooleanoTipoBase(ttipobooleanoNode2);
        }
	nodeList.add(ptipobaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce ATipoRealTipoBase */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoBase ptipobaseNode1;
        {
            // Block
        TTipoReal ttiporealNode2;
        ttiporealNode2 = (TTipoReal)nodeArrayList1.get(0);

        ptipobaseNode1 = new ATipoRealTipoBase(ttiporealNode2);
        }
	nodeList.add(ptipobaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce ATipoCadeiaTipoBase */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoBase ptipobaseNode1;
        {
            // Block
        TTipoCadeia ttipocadeiaNode2;
        ttipocadeiaNode2 = (TTipoCadeia)nodeArrayList1.get(0);

        ptipobaseNode1 = new ATipoCadeiaTipoBase(ttipocadeiaNode2);
        }
	nodeList.add(ptipobaseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce AIdAtribuicao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdAtribuicao pidatribuicaoNode1;
        {
            // Block
        TId tidNode2;
        TAtribuicao tatribuicaoNode3;
        PExp pexpNode4;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tatribuicaoNode3 = (TAtribuicao)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);

        pidatribuicaoNode1 = new AIdAtribuicao(tidNode2, tatribuicaoNode3, pexpNode4);
        }
	nodeList.add(pidatribuicaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce AArrayComp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PArrayComp parraycompNode1;
        {
            // Block
        TColEsq tcolesqNode2;
        TId tidNode3;
        TSeparador tseparadorNode4;
        PExp pexpNode5;
        TColDir tcoldirNode6;
        tcolesqNode2 = (TColEsq)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        tseparadorNode4 = (TSeparador)nodeArrayList3.get(0);
        pexpNode5 = (PExp)nodeArrayList4.get(0);
        tcoldirNode6 = (TColDir)nodeArrayList5.get(0);

        parraycompNode1 = new AArrayComp(tcolesqNode2, tidNode3, tseparadorNode4, pexpNode5, tcoldirNode6);
        }
	nodeList.add(parraycompNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AAblococomandos1BlocoComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoComandos pblococomandosNode1;
        {
            // Block
        TIniBloco tiniblocoNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        TFimBloco tfimblocoNode5;
        tiniblocoNode2 = (TIniBloco)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        }
        tfimblocoNode5 = (TFimBloco)nodeArrayList2.get(0);

        pblococomandosNode1 = new ABlocoComandos(tiniblocoNode2, listNode3, listNode4, tfimblocoNode5);
        }
	nodeList.add(pblococomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce AAblococomandos2BlocoComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoComandos pblococomandosNode1;
        {
            // Block
        TIniBloco tiniblocoNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TFimBloco tfimblocoNode6;
        tiniblocoNode2 = (TIniBloco)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        }
        tfimblocoNode6 = (TFimBloco)nodeArrayList3.get(0);

        pblococomandosNode1 = new ABlocoComandos(tiniblocoNode2, listNode4, listNode5, tfimblocoNode6);
        }
	nodeList.add(pblococomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce AAblococomandos3BlocoComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoComandos pblococomandosNode1;
        {
            // Block
        TIniBloco tiniblocoNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TFimBloco tfimblocoNode6;
        tiniblocoNode2 = (TIniBloco)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        tfimblocoNode6 = (TFimBloco)nodeArrayList3.get(0);

        pblococomandosNode1 = new ABlocoComandos(tiniblocoNode2, listNode3, listNode5, tfimblocoNode6);
        }
	nodeList.add(pblococomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce AAblococomandos4BlocoComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoComandos pblococomandosNode1;
        {
            // Block
        TIniBloco tiniblocoNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        TFimBloco tfimblocoNode7;
        tiniblocoNode2 = (TIniBloco)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        tfimblocoNode7 = (TFimBloco)nodeArrayList4.get(0);

        pblococomandosNode1 = new ABlocoComandos(tiniblocoNode2, listNode4, listNode6, tfimblocoNode7);
        }
	nodeList.add(pblococomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce AAdecprocedimento1DecProcedimento */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecProcedimento pdecprocedimentoNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TProcedimento tprocedimentoNode3;
        TDoisPontos tdoispontosNode4;
        TId tidNode5;
        TParEsq tparesqNode6;
        PParametros pparametrosNode7;
        TParDir tpardirNode8;
        PComando pcomandoNode9;
        tprocedimentoNode3 = (TProcedimento)nodeArrayList1.get(0);
        tdoispontosNode4 = (TDoisPontos)nodeArrayList2.get(0);
        tidNode5 = (TId)nodeArrayList3.get(0);
        tparesqNode6 = (TParEsq)nodeArrayList4.get(0);
        pparametrosNode7 = (PParametros)nodeArrayList5.get(0);
        tpardirNode8 = (TParDir)nodeArrayList6.get(0);
        pcomandoNode9 = (PComando)nodeArrayList7.get(0);

        pdecprocedimentoNode1 = new ADecProcedimento(null, tprocedimentoNode3, tdoispontosNode4, tidNode5, tparesqNode6, pparametrosNode7, tpardirNode8, pcomandoNode9);
        }
	nodeList.add(pdecprocedimentoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce AAdecprocedimento2DecProcedimento */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecProcedimento pdecprocedimentoNode1;
        {
            // Block
        TProcedPrincipal tprocedprincipalNode2;
        TProcedimento tprocedimentoNode3;
        TDoisPontos tdoispontosNode4;
        TId tidNode5;
        TParEsq tparesqNode6;
        PParametros pparametrosNode7;
        TParDir tpardirNode8;
        PComando pcomandoNode9;
        tprocedprincipalNode2 = (TProcedPrincipal)nodeArrayList1.get(0);
        tprocedimentoNode3 = (TProcedimento)nodeArrayList2.get(0);
        tdoispontosNode4 = (TDoisPontos)nodeArrayList3.get(0);
        tidNode5 = (TId)nodeArrayList4.get(0);
        tparesqNode6 = (TParEsq)nodeArrayList5.get(0);
        pparametrosNode7 = (PParametros)nodeArrayList6.get(0);
        tpardirNode8 = (TParDir)nodeArrayList7.get(0);
        pcomandoNode9 = (PComando)nodeArrayList8.get(0);

        pdecprocedimentoNode1 = new ADecProcedimento(tprocedprincipalNode2, tprocedimentoNode3, tdoispontosNode4, tidNode5, tparesqNode6, pparametrosNode7, tpardirNode8, pcomandoNode9);
        }
	nodeList.add(pdecprocedimentoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce ADecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecFuncao pdecfuncaoNode1;
        {
            // Block
        TFuncao tfuncaoNode2;
        TDoisPontos tdoispontosNode3;
        PTipo ptipoNode4;
        TId tidNode5;
        TParEsq tparesqNode6;
        PParametros pparametrosNode7;
        TParDir tpardirNode8;
        PExp pexpNode9;
        tfuncaoNode2 = (TFuncao)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        ptipoNode4 = (PTipo)nodeArrayList3.get(0);
        tidNode5 = (TId)nodeArrayList4.get(0);
        tparesqNode6 = (TParEsq)nodeArrayList5.get(0);
        pparametrosNode7 = (PParametros)nodeArrayList6.get(0);
        tpardirNode8 = (TParDir)nodeArrayList7.get(0);
        pexpNode9 = (PExp)nodeArrayList8.get(0);

        pdecfuncaoNode1 = new ADecFuncao(tfuncaoNode2, tdoispontosNode3, ptipoNode4, tidNode5, tparesqNode6, pparametrosNode7, tpardirNode8, pexpNode9);
        }
	nodeList.add(pdecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AAparametroseparadorparametroparametros1Parametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametros pparametrosNode1;
        {
            // Block
        PParametro pparametroNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        pparametroNode2 = (PParametro)nodeArrayList1.get(0);
        {
            // Block
        }

        pparametrosNode1 = new AParametroSeparadorParametroParametros(pparametroNode2, listNode3);
        }
	nodeList.add(pparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce AAparametroseparadorparametroparametros2Parametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametros pparametrosNode1;
        {
            // Block
        PParametro pparametroNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pparametroNode2 = (PParametro)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pparametrosNode1 = new AParametroSeparadorParametroParametros(pparametroNode2, listNode4);
        }
	nodeList.add(pparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce AVazioParametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PParametros pparametrosNode1;
        {
            // Block

        pparametrosNode1 = new AVazioParametros();
        }
	nodeList.add(pparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce ASeparadorParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeparadorParametro pseparadorparametroNode1;
        {
            // Block
        TSeparador tseparadorNode2;
        PParametro pparametroNode3;
        tseparadorNode2 = (TSeparador)nodeArrayList1.get(0);
        pparametroNode3 = (PParametro)nodeArrayList2.get(0);

        pseparadorparametroNode1 = new ASeparadorParametro(tseparadorNode2, pparametroNode3);
        }
	nodeList.add(pseparadorparametroNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce AParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametro pparametroNode1;
        {
            // Block
        PTipoParametro ptipoparametroNode2;
        TId tidNode3;
        ptipoparametroNode2 = (PTipoParametro)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);

        pparametroNode1 = new AParametro(ptipoparametroNode2, tidNode3);
        }
	nodeList.add(pparametroNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce ATipoBaseTipoParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoParametro ptipoparametroNode1;
        {
            // Block
        PTipoBase ptipobaseNode2;
        ptipobaseNode2 = (PTipoBase)nodeArrayList1.get(0);

        ptipoparametroNode1 = new ATipoBaseTipoParametro(ptipobaseNode2);
        }
	nodeList.add(ptipoparametroNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce ATipoParametroTipoParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoParametro ptipoparametroNode1;
        {
            // Block
        PTipoParametro ptipoparametroNode2;
        TColEsq tcolesqNode3;
        TColDir tcoldirNode4;
        ptipoparametroNode2 = (PTipoParametro)nodeArrayList1.get(0);
        tcolesqNode3 = (TColEsq)nodeArrayList2.get(0);
        tcoldirNode4 = (TColDir)nodeArrayList3.get(0);

        ptipoparametroNode1 = new ATipoParametroTipoParametro(ptipoparametroNode2, tcolesqNode3, tcoldirNode4);
        }
	nodeList.add(ptipoparametroNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce AIdIdExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdExp pidexpNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList1.get(0);

        pidexpNode1 = new AIdIdExp(tidNode2);
        }
	nodeList.add(pidexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce AExpIdExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdExp pidexpNode1;
        {
            // Block
        PExp pexpNode2;
        pexpNode2 = (PExp)nodeArrayList1.get(0);

        pidexpNode1 = new AExpIdExp(pexpNode2);
        }
	nodeList.add(pidexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce AIdValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList1.get(0);

        pvalorNode1 = new AIdValor(tidNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce AValorValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        PValor pvalorNode2;
        TColEsq tcolesqNode3;
        PExp pexpNode4;
        TColDir tcoldirNode5;
        pvalorNode2 = (PValor)nodeArrayList1.get(0);
        tcolesqNode3 = (TColEsq)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tcoldirNode5 = (TColDir)nodeArrayList4.get(0);

        pvalorNode1 = new AValorValor(pvalorNode2, tcolesqNode3, pexpNode4, tcoldirNode5);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce AAlistaexplistaexp11ChamadaProcedimento */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PChamadaProcedimento pchamadaprocedimentoNode1;
        {
            // Block
        TId tidNode2;
        TParEsq tparesqNode3;
        PListaExp plistaexpNode4;
        TParDir tpardirNode6;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tparesqNode3 = (TParEsq)nodeArrayList2.get(0);
        {
            // Block
        @SuppressWarnings("unused") Object nullNode5 = null;

        plistaexpNode4 = new AListaExpListaExp(null);
        }
        tpardirNode6 = (TParDir)nodeArrayList3.get(0);

        pchamadaprocedimentoNode1 = new AChamadaProcedimento(tidNode2, tparesqNode3, plistaexpNode4, tpardirNode6);
        }
	nodeList.add(pchamadaprocedimentoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce AAlistaexplistaexp21ChamadaProcedimento */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PChamadaProcedimento pchamadaprocedimentoNode1;
        {
            // Block
        TId tidNode2;
        TParEsq tparesqNode3;
        PListaExp plistaexpNode4;
        TParDir tpardirNode6;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tparesqNode3 = (TParEsq)nodeArrayList2.get(0);
        {
            // Block
        PListaExpVazia plistaexpvaziaNode5;
        plistaexpvaziaNode5 = (PListaExpVazia)nodeArrayList3.get(0);

        plistaexpNode4 = new AListaExpListaExp(plistaexpvaziaNode5);
        }
        tpardirNode6 = (TParDir)nodeArrayList4.get(0);

        pchamadaprocedimentoNode1 = new AChamadaProcedimento(tidNode2, tparesqNode3, plistaexpNode4, tpardirNode6);
        }
	nodeList.add(pchamadaprocedimentoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce AAblocoexpressoes1BlocoExpressoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoExpressoes pblocoexpressoesNode1;
        {
            // Block
        TIniBloco tiniblocoNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PExp pexpNode4;
        TFimBloco tfimblocoNode5;
        tiniblocoNode2 = (TIniBloco)nodeArrayList1.get(0);
        {
            // Block
        }
        pexpNode4 = (PExp)nodeArrayList2.get(0);
        tfimblocoNode5 = (TFimBloco)nodeArrayList3.get(0);

        pblocoexpressoesNode1 = new ABlocoExpressoes(tiniblocoNode2, listNode3, pexpNode4, tfimblocoNode5);
        }
	nodeList.add(pblocoexpressoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce AAblocoexpressoes2BlocoExpressoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoExpressoes pblocoexpressoesNode1;
        {
            // Block
        TIniBloco tiniblocoNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        PExp pexpNode5;
        TFimBloco tfimblocoNode6;
        tiniblocoNode2 = (TIniBloco)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        pexpNode5 = (PExp)nodeArrayList3.get(0);
        tfimblocoNode6 = (TFimBloco)nodeArrayList4.get(0);

        pblocoexpressoesNode1 = new ABlocoExpressoes(tiniblocoNode2, listNode4, pexpNode5, tfimblocoNode6);
        }
	nodeList.add(pblocoexpressoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce ADeclaracaoAbertaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PDeclAberta pdeclabertaNode2;
        pdeclabertaNode2 = (PDeclAberta)nodeArrayList1.get(0);

        pcomandoNode1 = new ADeclaracaoAbertaComando(pdeclabertaNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce ADeclaracaoFechadaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PDeclFechada pdeclfechadaNode2;
        pdeclfechadaNode2 = (PDeclFechada)nodeArrayList1.get(0);

        pcomandoNode1 = new ADeclaracaoFechadaComando(pdeclfechadaNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce ACondSeDeclAberta */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclAberta pdeclabertaNode1;
        {
            // Block
        TSe tseNode2;
        TParEsq tparesqNode3;
        PExp pexpNode4;
        TParDir tpardirNode5;
        PTudoMenosSe ptudomenosseNode6;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tparesqNode3 = (TParEsq)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpardirNode5 = (TParDir)nodeArrayList4.get(0);
        ptudomenosseNode6 = (PTudoMenosSe)nodeArrayList5.get(0);

        pdeclabertaNode1 = new ACondSeDeclAberta(tseNode2, tparesqNode3, pexpNode4, tpardirNode5, ptudomenosseNode6);
        }
	nodeList.add(pdeclabertaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce ACondSeAbertaDeclAberta */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclAberta pdeclabertaNode1;
        {
            // Block
        TSe tseNode2;
        TParEsq tparesqNode3;
        PExp pexpNode4;
        TParDir tpardirNode5;
        PDeclAberta pdeclabertaNode6;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tparesqNode3 = (TParEsq)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpardirNode5 = (TParDir)nodeArrayList4.get(0);
        pdeclabertaNode6 = (PDeclAberta)nodeArrayList5.get(0);

        pdeclabertaNode1 = new ACondSeAbertaDeclAberta(tseNode2, tparesqNode3, pexpNode4, tpardirNode5, pdeclabertaNode6);
        }
	nodeList.add(pdeclabertaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce ACondSeSenaoAbertaDeclAberta */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclAberta pdeclabertaNode1;
        {
            // Block
        TSe tseNode2;
        TParEsq tparesqNode3;
        PExp pexpNode4;
        TParDir tpardirNode5;
        PDeclFechada pdeclfechadaNode6;
        TSenao tsenaoNode7;
        PDeclAberta pdeclabertaNode8;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tparesqNode3 = (TParEsq)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpardirNode5 = (TParDir)nodeArrayList4.get(0);
        pdeclfechadaNode6 = (PDeclFechada)nodeArrayList5.get(0);
        tsenaoNode7 = (TSenao)nodeArrayList6.get(0);
        pdeclabertaNode8 = (PDeclAberta)nodeArrayList7.get(0);

        pdeclabertaNode1 = new ACondSeSenaoAbertaDeclAberta(tseNode2, tparesqNode3, pexpNode4, tpardirNode5, pdeclfechadaNode6, tsenaoNode7, pdeclabertaNode8);
        }
	nodeList.add(pdeclabertaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce AEnquantoAbertoDeclAberta */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclAberta pdeclabertaNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TParEsq tparesqNode3;
        PExp pexpNode4;
        TParDir tpardirNode5;
        PDeclAberta pdeclabertaNode6;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        tparesqNode3 = (TParEsq)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpardirNode5 = (TParDir)nodeArrayList4.get(0);
        pdeclabertaNode6 = (PDeclAberta)nodeArrayList5.get(0);

        pdeclabertaNode1 = new AEnquantoAbertoDeclAberta(tenquantoNode2, tparesqNode3, pexpNode4, tpardirNode5, pdeclabertaNode6);
        }
	nodeList.add(pdeclabertaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce ATudoMenosSeDeclFechada */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclFechada pdeclfechadaNode1;
        {
            // Block
        PTudoMenosSe ptudomenosseNode2;
        ptudomenosseNode2 = (PTudoMenosSe)nodeArrayList1.get(0);

        pdeclfechadaNode1 = new ATudoMenosSeDeclFechada(ptudomenosseNode2);
        }
	nodeList.add(pdeclfechadaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce ACondSeSenaoFechadaDeclFechada */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclFechada pdeclfechadaNode1;
        {
            // Block
        TSe tseNode2;
        TParEsq tparesqNode3;
        PExp pexpNode4;
        TParDir tpardirNode5;
        PDeclFechada pdeclfechadaNode6;
        TSenao tsenaoNode7;
        PDeclFechada pdeclfechadaNode8;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tparesqNode3 = (TParEsq)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpardirNode5 = (TParDir)nodeArrayList4.get(0);
        pdeclfechadaNode6 = (PDeclFechada)nodeArrayList5.get(0);
        tsenaoNode7 = (TSenao)nodeArrayList6.get(0);
        pdeclfechadaNode8 = (PDeclFechada)nodeArrayList7.get(0);

        pdeclfechadaNode1 = new ACondSeSenaoFechadaDeclFechada(tseNode2, tparesqNode3, pexpNode4, tpardirNode5, pdeclfechadaNode6, tsenaoNode7, pdeclfechadaNode8);
        }
	nodeList.add(pdeclfechadaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce AEnquantoFechadoDeclFechada */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclFechada pdeclfechadaNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TParEsq tparesqNode3;
        PExp pexpNode4;
        TParDir tpardirNode5;
        PDeclFechada pdeclfechadaNode6;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        tparesqNode3 = (TParEsq)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpardirNode5 = (TParDir)nodeArrayList4.get(0);
        pdeclfechadaNode6 = (PDeclFechada)nodeArrayList5.get(0);

        pdeclfechadaNode1 = new AEnquantoFechadoDeclFechada(tenquantoNode2, tparesqNode3, pexpNode4, tpardirNode5, pdeclfechadaNode6);
        }
	nodeList.add(pdeclfechadaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce AOutra1TudoMenosSe */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTudoMenosSe ptudomenosseNode1;
        {
            // Block
        PIdAtribuicao pidatribuicaoNode2;
        TPontoVirgula tpontovirgulaNode3;
        pidatribuicaoNode2 = (PIdAtribuicao)nodeArrayList1.get(0);
        tpontovirgulaNode3 = (TPontoVirgula)nodeArrayList2.get(0);

        ptudomenosseNode1 = new AOutra1TudoMenosSe(pidatribuicaoNode2, tpontovirgulaNode3);
        }
	nodeList.add(ptudomenosseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce AOutra2TudoMenosSe */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTudoMenosSe ptudomenosseNode1;
        {
            // Block
        PChamadaProcedimento pchamadaprocedimentoNode2;
        TPontoVirgula tpontovirgulaNode3;
        pchamadaprocedimentoNode2 = (PChamadaProcedimento)nodeArrayList1.get(0);
        tpontovirgulaNode3 = (TPontoVirgula)nodeArrayList2.get(0);

        ptudomenosseNode1 = new AOutra2TudoMenosSe(pchamadaprocedimentoNode2, tpontovirgulaNode3);
        }
	nodeList.add(ptudomenosseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce AOutra3TudoMenosSe */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTudoMenosSe ptudomenosseNode1;
        {
            // Block
        PBlocoComandos pblococomandosNode2;
        pblococomandosNode2 = (PBlocoComandos)nodeArrayList1.get(0);

        ptudomenosseNode1 = new AOutra3TudoMenosSe(pblococomandosNode2);
        }
	nodeList.add(ptudomenosseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce AArrayCompExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PArrayComp parraycompNode2;
        parraycompNode2 = (PArrayComp)nodeArrayList1.get(0);

        pexpNode1 = new AArrayCompExp(parraycompNode2);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce ATernarioExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        TSe tseNode2;
        TParEsq tparesqNode3;
        PExp pexpNode4;
        TParDir tpardirNode5;
        PExpSomaSub pexpsomasubNode6;
        TSenao tsenaoNode7;
        PExpSomaSub pexpsomasubNode8;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tparesqNode3 = (TParEsq)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpardirNode5 = (TParDir)nodeArrayList4.get(0);
        pexpsomasubNode6 = (PExpSomaSub)nodeArrayList5.get(0);
        tsenaoNode7 = (TSenao)nodeArrayList6.get(0);
        pexpsomasubNode8 = (PExpSomaSub)nodeArrayList7.get(0);

        pexpNode1 = new ATernarioExp(tseNode2, tparesqNode3, pexpNode4, tpardirNode5, pexpsomasubNode6, tsenaoNode7, pexpsomasubNode8);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce AOrExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PExp pexpNode2;
        TOu touNode3;
        PExpSomaSub pexpsomasubNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        touNode3 = (TOu)nodeArrayList2.get(0);
        pexpsomasubNode4 = (PExpSomaSub)nodeArrayList3.get(0);

        pexpNode1 = new AOrExp(pexpNode2, touNode3, pexpsomasubNode4);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce AAndExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PExp pexpNode2;
        TE teNode3;
        PExpSomaSub pexpsomasubNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        teNode3 = (TE)nodeArrayList2.get(0);
        pexpsomasubNode4 = (PExpSomaSub)nodeArrayList3.get(0);

        pexpNode1 = new AAndExp(pexpNode2, teNode3, pexpsomasubNode4);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce AIgualExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PExp pexpNode2;
        TIgual tigualNode3;
        PExpSomaSub pexpsomasubNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tigualNode3 = (TIgual)nodeArrayList2.get(0);
        pexpsomasubNode4 = (PExpSomaSub)nodeArrayList3.get(0);

        pexpNode1 = new AIgualExp(pexpNode2, tigualNode3, pexpsomasubNode4);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce AMaiorIgualExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PExp pexpNode2;
        TMaiorIgual tmaiorigualNode3;
        PExpSomaSub pexpsomasubNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tmaiorigualNode3 = (TMaiorIgual)nodeArrayList2.get(0);
        pexpsomasubNode4 = (PExpSomaSub)nodeArrayList3.get(0);

        pexpNode1 = new AMaiorIgualExp(pexpNode2, tmaiorigualNode3, pexpsomasubNode4);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce AMaiorExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PExp pexpNode2;
        TMaiorQ tmaiorqNode3;
        PExpSomaSub pexpsomasubNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tmaiorqNode3 = (TMaiorQ)nodeArrayList2.get(0);
        pexpsomasubNode4 = (PExpSomaSub)nodeArrayList3.get(0);

        pexpNode1 = new AMaiorExp(pexpNode2, tmaiorqNode3, pexpsomasubNode4);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce AExpSomaSubExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PExpSomaSub pexpsomasubNode2;
        pexpsomasubNode2 = (PExpSomaSub)nodeArrayList1.get(0);

        pexpNode1 = new AExpSomaSubExp(pexpsomasubNode2);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce AFatorExpSomaSub */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpSomaSub pexpsomasubNode1;
        {
            // Block
        PFator pfatorNode2;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);

        pexpsomasubNode1 = new AFatorExpSomaSub(pfatorNode2);
        }
	nodeList.add(pexpsomasubNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce ASomaExpSomaSub */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpSomaSub pexpsomasubNode1;
        {
            // Block
        PExpSomaSub pexpsomasubNode2;
        TSoma tsomaNode3;
        PFator pfatorNode4;
        pexpsomasubNode2 = (PExpSomaSub)nodeArrayList1.get(0);
        tsomaNode3 = (TSoma)nodeArrayList2.get(0);
        pfatorNode4 = (PFator)nodeArrayList3.get(0);

        pexpsomasubNode1 = new ASomaExpSomaSub(pexpsomasubNode2, tsomaNode3, pfatorNode4);
        }
	nodeList.add(pexpsomasubNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce AMenosExpSomaSub */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpSomaSub pexpsomasubNode1;
        {
            // Block
        PExpSomaSub pexpsomasubNode2;
        TMenos tmenosNode3;
        PFator pfatorNode4;
        pexpsomasubNode2 = (PExpSomaSub)nodeArrayList1.get(0);
        tmenosNode3 = (TMenos)nodeArrayList2.get(0);
        pfatorNode4 = (PFator)nodeArrayList3.get(0);

        pexpsomasubNode1 = new AMenosExpSomaSub(pexpsomasubNode2, tmenosNode3, pfatorNode4);
        }
	nodeList.add(pexpsomasubNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce ATermoFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PTermo ptermoNode2;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);

        pfatorNode1 = new ATermoFator(ptermoNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce AMultFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PFator pfatorNode2;
        TMult tmultNode3;
        PTermo ptermoNode4;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);
        tmultNode3 = (TMult)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pfatorNode1 = new AMultFator(pfatorNode2, tmultNode3, ptermoNode4);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce ADivFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PFator pfatorNode2;
        TDiv tdivNode3;
        PTermo ptermoNode4;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);
        tdivNode3 = (TDiv)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pfatorNode1 = new ADivFator(pfatorNode2, tdivNode3, ptermoNode4);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce AModFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PFator pfatorNode2;
        TMod tmodNode3;
        PTermo ptermoNode4;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);
        tmodNode3 = (TMod)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pfatorNode1 = new AModFator(pfatorNode2, tmodNode3, ptermoNode4);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce AValorTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PValor pvalorNode2;
        pvalorNode2 = (PValor)nodeArrayList1.get(0);

        ptermoNode1 = new AValorTermo(pvalorNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce AChamadaFuncaoTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PChamadaFuncao pchamadafuncaoNode2;
        pchamadafuncaoNode2 = (PChamadaFuncao)nodeArrayList1.get(0);

        ptermoNode1 = new AChamadaFuncaoTermo(pchamadafuncaoNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce AExpTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        TParEsq tparesqNode2;
        PExp pexpNode3;
        TParDir tpardirNode4;
        tparesqNode2 = (TParEsq)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);
        tpardirNode4 = (TParDir)nodeArrayList3.get(0);

        ptermoNode1 = new AExpTermo(tparesqNode2, pexpNode3, tpardirNode4);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce ABlocoExpTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PBlocoExpressoes pblocoexpressoesNode2;
        pblocoexpressoesNode2 = (PBlocoExpressoes)nodeArrayList1.get(0);

        ptermoNode1 = new ABlocoExpTermo(pblocoexpressoesNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new71() /* reduce AMenosTermoTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        TNao tnaoNode2;
        PTermo ptermoNode3;
        tnaoNode2 = (TNao)nodeArrayList1.get(0);
        ptermoNode3 = (PTermo)nodeArrayList2.get(0);

        ptermoNode1 = new AMenosTermoTermo(tnaoNode2, ptermoNode3);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new72() /* reduce ATipagemTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PTipagem ptipagemNode2;
        ptipagemNode2 = (PTipagem)nodeArrayList1.get(0);

        ptermoNode1 = new ATipagemTermo(ptipagemNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new73() /* reduce AIntTipagem */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipagem ptipagemNode1;
        {
            // Block
        TNumero tnumeroNode2;
        tnumeroNode2 = (TNumero)nodeArrayList1.get(0);

        ptipagemNode1 = new AIntTipagem(tnumeroNode2);
        }
	nodeList.add(ptipagemNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new74() /* reduce ARealTipagem */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipagem ptipagemNode1;
        {
            // Block
        TDecimal tdecimalNode2;
        tdecimalNode2 = (TDecimal)nodeArrayList1.get(0);

        ptipagemNode1 = new ARealTipagem(tdecimalNode2);
        }
	nodeList.add(ptipagemNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new75() /* reduce AStringTipagem */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipagem ptipagemNode1;
        {
            // Block
        TCadeia tcadeiaNode2;
        tcadeiaNode2 = (TCadeia)nodeArrayList1.get(0);

        ptipagemNode1 = new AStringTipagem(tcadeiaNode2);
        }
	nodeList.add(ptipagemNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new76() /* reduce ABoolTipagem */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipagem ptipagemNode1;
        {
            // Block
        TBooleano tbooleanoNode2;
        tbooleanoNode2 = (TBooleano)nodeArrayList1.get(0);

        ptipagemNode1 = new ABoolTipagem(tbooleanoNode2);
        }
	nodeList.add(ptipagemNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new77() /* reduce AChamadaFuncaoaAlistaexplistaexp11ChamadaFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PChamadaFuncao pchamadafuncaoNode1;
        {
            // Block
        TId tidNode2;
        TParEsq tparesqNode3;
        PListaExp plistaexpNode4;
        TParDir tpardirNode6;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tparesqNode3 = (TParEsq)nodeArrayList2.get(0);
        {
            // Block
        @SuppressWarnings("unused") Object nullNode5 = null;

        plistaexpNode4 = new AListaExpListaExp(null);
        }
        tpardirNode6 = (TParDir)nodeArrayList3.get(0);

        pchamadafuncaoNode1 = new AChamadaFuncaoChamadaFuncao(tidNode2, tparesqNode3, plistaexpNode4, tpardirNode6);
        }
	nodeList.add(pchamadafuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new78() /* reduce AChamadaFuncaoaAlistaexplistaexp21ChamadaFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PChamadaFuncao pchamadafuncaoNode1;
        {
            // Block
        TId tidNode2;
        TParEsq tparesqNode3;
        PListaExp plistaexpNode4;
        TParDir tpardirNode6;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tparesqNode3 = (TParEsq)nodeArrayList2.get(0);
        {
            // Block
        PListaExpVazia plistaexpvaziaNode5;
        plistaexpvaziaNode5 = (PListaExpVazia)nodeArrayList3.get(0);

        plistaexpNode4 = new AListaExpListaExp(plistaexpvaziaNode5);
        }
        tpardirNode6 = (TParDir)nodeArrayList4.get(0);

        pchamadafuncaoNode1 = new AChamadaFuncaoChamadaFuncao(tidNode2, tparesqNode3, plistaexpNode4, tpardirNode6);
        }
	nodeList.add(pchamadafuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new79() /* reduce AAlistaexpvazialistaexpvazia1ListaExpVazia */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaExpVazia plistaexpvaziaNode1;
        {
            // Block
        PExp pexpNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        {
            // Block
        }

        plistaexpvaziaNode1 = new AListaExpVaziaListaExpVazia(pexpNode2, listNode3);
        }
	nodeList.add(plistaexpvaziaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new80() /* reduce AAlistaexpvazialistaexpvazia2ListaExpVazia */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaExpVazia plistaexpvaziaNode1;
        {
            // Block
        PExp pexpNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        plistaexpvaziaNode1 = new AListaExpVaziaListaExpVazia(pexpNode2, listNode4);
        }
	nodeList.add(plistaexpvaziaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new81() /* reduce ASeparadorExpSeparadorExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeparadorExp pseparadorexpNode1;
        {
            // Block
        TSeparador tseparadorNode2;
        PExp pexpNode3;
        tseparadorNode2 = (TSeparador)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);

        pseparadorexpNode1 = new ASeparadorExpSeparadorExp(tseparadorNode2, pexpNode3);
        }
	nodeList.add(pseparadorexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new82() /* reduce ATerminalADecsProcFunc */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PDecsProcFunc pdecsprocfuncNode1;
        pdecsprocfuncNode1 = (PDecsProcFunc)nodeArrayList1.get(0);
	if(pdecsprocfuncNode1 != null)
	{
	  listNode2.add(pdecsprocfuncNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new83() /* reduce ANonTerminalADecsProcFunc */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PDecsProcFunc pdecsprocfuncNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pdecsprocfuncNode2 = (PDecsProcFunc)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pdecsprocfuncNode2 != null)
	{
	  listNode3.add(pdecsprocfuncNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new84() /* reduce ATerminalADecsVarConst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PDecsVarConst pdecsvarconstNode1;
        pdecsvarconstNode1 = (PDecsVarConst)nodeArrayList1.get(0);
	if(pdecsvarconstNode1 != null)
	{
	  listNode2.add(pdecsvarconstNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new85() /* reduce ANonTerminalADecsVarConst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PDecsVarConst pdecsvarconstNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pdecsvarconstNode2 = (PDecsVarConst)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pdecsvarconstNode2 != null)
	{
	  listNode3.add(pdecsvarconstNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new86() /* reduce ATerminalAComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PComando pcomandoNode1;
        pcomandoNode1 = (PComando)nodeArrayList1.get(0);
	if(pcomandoNode1 != null)
	{
	  listNode2.add(pcomandoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new87() /* reduce ANonTerminalAComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PComando pcomandoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcomandoNode2 = (PComando)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcomandoNode2 != null)
	{
	  listNode3.add(pcomandoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new88() /* reduce ATerminalASeparadorParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PSeparadorParametro pseparadorparametroNode1;
        pseparadorparametroNode1 = (PSeparadorParametro)nodeArrayList1.get(0);
	if(pseparadorparametroNode1 != null)
	{
	  listNode2.add(pseparadorparametroNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new89() /* reduce ANonTerminalASeparadorParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PSeparadorParametro pseparadorparametroNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pseparadorparametroNode2 = (PSeparadorParametro)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pseparadorparametroNode2 != null)
	{
	  listNode3.add(pseparadorparametroNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new90() /* reduce ATerminalADecCons */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PDecCons pdecconsNode1;
        pdecconsNode1 = (PDecCons)nodeArrayList1.get(0);
	if(pdecconsNode1 != null)
	{
	  listNode2.add(pdecconsNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new91() /* reduce ANonTerminalADecCons */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PDecCons pdecconsNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pdecconsNode2 = (PDecCons)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pdecconsNode2 != null)
	{
	  listNode3.add(pdecconsNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new92() /* reduce ATerminalASeparadorExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PSeparadorExp pseparadorexpNode1;
        pseparadorexpNode1 = (PSeparadorExp)nodeArrayList1.get(0);
	if(pseparadorexpNode1 != null)
	{
	  listNode2.add(pseparadorexpNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new93() /* reduce ANonTerminalASeparadorExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PSeparadorExp pseparadorexpNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pseparadorexpNode2 = (PSeparadorExp)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pseparadorexpNode2 != null)
	{
	  listNode3.add(pseparadorexpNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {22, SHIFT, 1}, {23, SHIFT, 2}, {24, SHIFT, 3}, {36, SHIFT, 4}, {37, SHIFT, 5}, },
			{{-1, ERROR, 1}, {37, SHIFT, 15}, },
			{{-1, ERROR, 2}, {20, SHIFT, 16}, },
			{{-1, ERROR, 3}, {20, SHIFT, 17}, },
			{{-1, ERROR, 4}, {20, SHIFT, 18}, },
			{{-1, ERROR, 5}, {20, SHIFT, 19}, },
			{{-1, ERROR, 6}, {41, ACCEPT, -1}, },
			{{-1, REDUCE, 84}, },
			{{-1, REDUCE, 82}, },
			{{-1, REDUCE, 3}, },
			{{-1, REDUCE, 2}, },
			{{-1, REDUCE, 4}, },
			{{-1, REDUCE, 5}, },
			{{-1, REDUCE, 0}, {22, SHIFT, 1}, {36, SHIFT, 4}, {37, SHIFT, 5}, },
			{{-1, ERROR, 14}, {22, SHIFT, 1}, {23, SHIFT, 2}, {24, SHIFT, 3}, {36, SHIFT, 4}, {37, SHIFT, 5}, },
			{{-1, ERROR, 15}, {20, SHIFT, 23}, },
			{{-1, ERROR, 16}, {25, SHIFT, 24}, {26, SHIFT, 25}, {27, SHIFT, 26}, {28, SHIFT, 27}, },
			{{-1, ERROR, 17}, {25, SHIFT, 24}, {26, SHIFT, 25}, {27, SHIFT, 26}, {28, SHIFT, 27}, },
			{{-1, ERROR, 18}, {25, SHIFT, 24}, {26, SHIFT, 25}, {27, SHIFT, 26}, {28, SHIFT, 27}, },
			{{-1, ERROR, 19}, {39, SHIFT, 32}, },
			{{-1, REDUCE, 83}, },
			{{-1, REDUCE, 85}, },
			{{-1, REDUCE, 1}, {22, SHIFT, 1}, {36, SHIFT, 4}, {37, SHIFT, 5}, },
			{{-1, ERROR, 23}, {39, SHIFT, 33}, },
			{{-1, REDUCE, 12}, },
			{{-1, REDUCE, 14}, },
			{{-1, REDUCE, 13}, },
			{{-1, REDUCE, 15}, },
			{{-1, ERROR, 28}, {39, SHIFT, 34}, },
			{{-1, REDUCE, 10}, {4, SHIFT, 37}, },
			{{-1, ERROR, 30}, {39, SHIFT, 38}, },
			{{-1, ERROR, 31}, {39, SHIFT, 40}, },
			{{-1, ERROR, 32}, {6, SHIFT, 41}, },
			{{-1, ERROR, 33}, {6, SHIFT, 42}, },
			{{-1, REDUCE, 8}, {21, SHIFT, 43}, },
			{{-1, ERROR, 35}, {3, SHIFT, 44}, },
			{{-1, REDUCE, 9}, },
			{{-1, ERROR, 37}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {4, SHIFT, 48}, {6, SHIFT, 49}, {18, SHIFT, 50}, {29, SHIFT, 51}, {32, SHIFT, 52}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, ERROR, 38}, {21, SHIFT, 43}, },
			{{-1, ERROR, 39}, {3, SHIFT, 64}, },
			{{-1, ERROR, 40}, {6, SHIFT, 65}, },
			{{-1, REDUCE, 27}, {25, SHIFT, 24}, {26, SHIFT, 25}, {27, SHIFT, 26}, {28, SHIFT, 27}, },
			{{-1, REDUCE, 27}, {25, SHIFT, 24}, {26, SHIFT, 25}, {27, SHIFT, 26}, {28, SHIFT, 27}, },
			{{-1, ERROR, 43}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {4, SHIFT, 48}, {6, SHIFT, 49}, {18, SHIFT, 50}, {29, SHIFT, 51}, {32, SHIFT, 52}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, REDUCE, 7}, },
			{{-1, REDUCE, 73}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 76}, },
			{{-1, ERROR, 48}, {39, SHIFT, 72}, },
			{{-1, ERROR, 49}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {4, SHIFT, 48}, {6, SHIFT, 49}, {18, SHIFT, 50}, {29, SHIFT, 51}, {32, SHIFT, 52}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, ERROR, 50}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {6, SHIFT, 49}, {18, SHIFT, 50}, {29, SHIFT, 51}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, ERROR, 51}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {4, SHIFT, 48}, {6, SHIFT, 49}, {18, SHIFT, 50}, {24, SHIFT, 3}, {29, SHIFT, 51}, {32, SHIFT, 52}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, ERROR, 52}, {6, SHIFT, 78}, },
			{{-1, REDUCE, 34}, {6, SHIFT, 79}, },
			{{-1, REDUCE, 75}, },
			{{-1, REDUCE, 52}, },
			{{-1, REDUCE, 67}, {4, SHIFT, 80}, },
			{{-1, REDUCE, 70}, },
			{{-1, ERROR, 58}, {5, SHIFT, 81}, {13, SHIFT, 82}, {14, SHIFT, 83}, {15, SHIFT, 84}, {16, SHIFT, 85}, {17, SHIFT, 86}, },
			{{-1, REDUCE, 59}, {8, SHIFT, 87}, {9, SHIFT, 88}, },
			{{-1, REDUCE, 60}, {10, SHIFT, 89}, {11, SHIFT, 90}, {12, SHIFT, 91}, },
			{{-1, REDUCE, 63}, },
			{{-1, REDUCE, 72}, },
			{{-1, REDUCE, 68}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 27}, {25, SHIFT, 24}, {26, SHIFT, 25}, {27, SHIFT, 26}, {28, SHIFT, 27}, },
			{{-1, REDUCE, 30}, },
			{{-1, ERROR, 67}, {7, SHIFT, 93}, },
			{{-1, REDUCE, 25}, {19, SHIFT, 94}, },
			{{-1, ERROR, 69}, {4, SHIFT, 97}, {39, SHIFT, 98}, },
			{{-1, ERROR, 70}, {7, SHIFT, 99}, },
			{{-1, REDUCE, 16}, {13, SHIFT, 82}, {14, SHIFT, 83}, {15, SHIFT, 84}, {16, SHIFT, 85}, {17, SHIFT, 86}, },
			{{-1, ERROR, 72}, {19, SHIFT, 100}, },
			{{-1, ERROR, 73}, {7, SHIFT, 101}, {13, SHIFT, 82}, {14, SHIFT, 83}, {15, SHIFT, 84}, {16, SHIFT, 85}, {17, SHIFT, 86}, },
			{{-1, REDUCE, 71}, },
			{{-1, REDUCE, 90}, },
			{{-1, ERROR, 76}, {13, SHIFT, 82}, {14, SHIFT, 83}, {15, SHIFT, 84}, {16, SHIFT, 85}, {17, SHIFT, 86}, {30, SHIFT, 102}, },
			{{-1, ERROR, 77}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {4, SHIFT, 48}, {6, SHIFT, 49}, {18, SHIFT, 50}, {24, SHIFT, 3}, {29, SHIFT, 51}, {32, SHIFT, 52}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, ERROR, 78}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {4, SHIFT, 48}, {6, SHIFT, 49}, {18, SHIFT, 50}, {29, SHIFT, 51}, {32, SHIFT, 52}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, ERROR, 79}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {4, SHIFT, 48}, {6, SHIFT, 49}, {7, SHIFT, 106}, {18, SHIFT, 50}, {29, SHIFT, 51}, {32, SHIFT, 52}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, ERROR, 80}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {4, SHIFT, 48}, {6, SHIFT, 49}, {18, SHIFT, 50}, {29, SHIFT, 51}, {32, SHIFT, 52}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, REDUCE, 11}, },
			{{-1, ERROR, 82}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {6, SHIFT, 49}, {18, SHIFT, 50}, {29, SHIFT, 51}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, ERROR, 83}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {6, SHIFT, 49}, {18, SHIFT, 50}, {29, SHIFT, 51}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, ERROR, 84}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {6, SHIFT, 49}, {18, SHIFT, 50}, {29, SHIFT, 51}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, ERROR, 85}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {6, SHIFT, 49}, {18, SHIFT, 50}, {29, SHIFT, 51}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, ERROR, 86}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {6, SHIFT, 49}, {18, SHIFT, 50}, {29, SHIFT, 51}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, ERROR, 87}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {6, SHIFT, 49}, {18, SHIFT, 50}, {29, SHIFT, 51}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, ERROR, 88}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {6, SHIFT, 49}, {18, SHIFT, 50}, {29, SHIFT, 51}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, ERROR, 89}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {6, SHIFT, 49}, {18, SHIFT, 50}, {29, SHIFT, 51}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, ERROR, 90}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {6, SHIFT, 49}, {18, SHIFT, 50}, {29, SHIFT, 51}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, ERROR, 91}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {6, SHIFT, 49}, {18, SHIFT, 50}, {29, SHIFT, 51}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, ERROR, 92}, {7, SHIFT, 120}, },
			{{-1, ERROR, 93}, {29, SHIFT, 121}, {31, SHIFT, 122}, {32, SHIFT, 123}, {39, SHIFT, 124}, },
			{{-1, ERROR, 94}, {25, SHIFT, 24}, {26, SHIFT, 25}, {27, SHIFT, 26}, {28, SHIFT, 27}, },
			{{-1, REDUCE, 88}, },
			{{-1, REDUCE, 26}, {19, SHIFT, 94}, },
			{{-1, ERROR, 97}, {5, SHIFT, 134}, },
			{{-1, REDUCE, 29}, },
			{{-1, ERROR, 99}, {29, SHIFT, 121}, {31, SHIFT, 122}, {32, SHIFT, 123}, {39, SHIFT, 124}, },
			{{-1, ERROR, 100}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {4, SHIFT, 48}, {6, SHIFT, 49}, {18, SHIFT, 50}, {29, SHIFT, 51}, {32, SHIFT, 52}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, REDUCE, 69}, },
			{{-1, REDUCE, 38}, },
			{{-1, REDUCE, 91}, },
			{{-1, ERROR, 104}, {13, SHIFT, 82}, {14, SHIFT, 83}, {15, SHIFT, 84}, {16, SHIFT, 85}, {17, SHIFT, 86}, {30, SHIFT, 137}, },
			{{-1, ERROR, 105}, {7, SHIFT, 138}, {13, SHIFT, 82}, {14, SHIFT, 83}, {15, SHIFT, 84}, {16, SHIFT, 85}, {17, SHIFT, 86}, },
			{{-1, REDUCE, 77}, },
			{{-1, REDUCE, 79}, {13, SHIFT, 82}, {14, SHIFT, 83}, {15, SHIFT, 84}, {16, SHIFT, 85}, {17, SHIFT, 86}, {19, SHIFT, 139}, },
			{{-1, ERROR, 108}, {7, SHIFT, 142}, },
			{{-1, ERROR, 109}, {5, SHIFT, 143}, {13, SHIFT, 82}, {14, SHIFT, 83}, {15, SHIFT, 84}, {16, SHIFT, 85}, {17, SHIFT, 86}, },
			{{-1, REDUCE, 58}, {8, SHIFT, 87}, {9, SHIFT, 88}, },
			{{-1, REDUCE, 57}, {8, SHIFT, 87}, {9, SHIFT, 88}, },
			{{-1, REDUCE, 56}, {8, SHIFT, 87}, {9, SHIFT, 88}, },
			{{-1, REDUCE, 55}, {8, SHIFT, 87}, {9, SHIFT, 88}, },
			{{-1, REDUCE, 54}, {8, SHIFT, 87}, {9, SHIFT, 88}, },
			{{-1, REDUCE, 61}, {10, SHIFT, 89}, {11, SHIFT, 90}, {12, SHIFT, 91}, },
			{{-1, REDUCE, 62}, {10, SHIFT, 89}, {11, SHIFT, 90}, {12, SHIFT, 91}, },
			{{-1, REDUCE, 64}, },
			{{-1, REDUCE, 65}, },
			{{-1, REDUCE, 66}, },
			{{-1, ERROR, 120}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {4, SHIFT, 48}, {6, SHIFT, 49}, {18, SHIFT, 50}, {29, SHIFT, 51}, {32, SHIFT, 52}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, ERROR, 121}, {23, SHIFT, 2}, {24, SHIFT, 3}, {29, SHIFT, 121}, {30, SHIFT, 145}, {31, SHIFT, 122}, {32, SHIFT, 123}, {39, SHIFT, 124}, },
			{{-1, ERROR, 122}, {6, SHIFT, 149}, },
			{{-1, ERROR, 123}, {6, SHIFT, 150}, },
			{{-1, ERROR, 124}, {6, SHIFT, 151}, {21, SHIFT, 43}, },
			{{-1, ERROR, 125}, {3, SHIFT, 152}, },
			{{-1, REDUCE, 51}, },
			{{-1, ERROR, 127}, {3, SHIFT, 153}, },
			{{-1, REDUCE, 22}, },
			{{-1, REDUCE, 40}, },
			{{-1, REDUCE, 41}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 28}, },
			{{-1, REDUCE, 89}, },
			{{-1, REDUCE, 31}, },
			{{-1, REDUCE, 23}, },
			{{-1, ERROR, 136}, {5, SHIFT, 154}, {13, SHIFT, 82}, {14, SHIFT, 83}, {15, SHIFT, 84}, {16, SHIFT, 85}, {17, SHIFT, 86}, },
			{{-1, REDUCE, 39}, },
			{{-1, ERROR, 138}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {6, SHIFT, 49}, {18, SHIFT, 50}, {29, SHIFT, 51}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, ERROR, 139}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {4, SHIFT, 48}, {6, SHIFT, 49}, {18, SHIFT, 50}, {29, SHIFT, 51}, {32, SHIFT, 52}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, REDUCE, 92}, },
			{{-1, REDUCE, 80}, {19, SHIFT, 139}, },
			{{-1, REDUCE, 78}, },
			{{-1, REDUCE, 35}, },
			{{-1, REDUCE, 24}, {13, SHIFT, 82}, {14, SHIFT, 83}, {15, SHIFT, 84}, {16, SHIFT, 85}, {17, SHIFT, 86}, },
			{{-1, REDUCE, 18}, },
			{{-1, REDUCE, 86}, },
			{{-1, ERROR, 147}, {23, SHIFT, 2}, {24, SHIFT, 3}, {29, SHIFT, 121}, {30, SHIFT, 158}, {31, SHIFT, 122}, {32, SHIFT, 123}, {39, SHIFT, 124}, },
			{{-1, ERROR, 148}, {29, SHIFT, 121}, {30, SHIFT, 160}, {31, SHIFT, 122}, {32, SHIFT, 123}, {39, SHIFT, 124}, },
			{{-1, ERROR, 149}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {4, SHIFT, 48}, {6, SHIFT, 49}, {18, SHIFT, 50}, {29, SHIFT, 51}, {32, SHIFT, 52}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, ERROR, 150}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {4, SHIFT, 48}, {6, SHIFT, 49}, {18, SHIFT, 50}, {29, SHIFT, 51}, {32, SHIFT, 52}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, ERROR, 151}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {4, SHIFT, 48}, {6, SHIFT, 49}, {7, SHIFT, 164}, {18, SHIFT, 50}, {29, SHIFT, 51}, {32, SHIFT, 52}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 50}, },
			{{-1, REDUCE, 17}, },
			{{-1, ERROR, 155}, {8, SHIFT, 87}, {9, SHIFT, 88}, {33, SHIFT, 166}, },
			{{-1, REDUCE, 81}, {13, SHIFT, 82}, {14, SHIFT, 83}, {15, SHIFT, 84}, {16, SHIFT, 85}, {17, SHIFT, 86}, },
			{{-1, REDUCE, 93}, },
			{{-1, REDUCE, 19}, },
			{{-1, ERROR, 159}, {29, SHIFT, 121}, {30, SHIFT, 167}, {31, SHIFT, 122}, {32, SHIFT, 123}, {39, SHIFT, 124}, },
			{{-1, REDUCE, 20}, },
			{{-1, REDUCE, 87}, },
			{{-1, ERROR, 162}, {7, SHIFT, 168}, {13, SHIFT, 82}, {14, SHIFT, 83}, {15, SHIFT, 84}, {16, SHIFT, 85}, {17, SHIFT, 86}, },
			{{-1, ERROR, 163}, {7, SHIFT, 169}, {13, SHIFT, 82}, {14, SHIFT, 83}, {15, SHIFT, 84}, {16, SHIFT, 85}, {17, SHIFT, 86}, },
			{{-1, REDUCE, 36}, },
			{{-1, ERROR, 165}, {7, SHIFT, 170}, },
			{{-1, ERROR, 166}, {0, SHIFT, 45}, {1, SHIFT, 46}, {2, SHIFT, 47}, {6, SHIFT, 49}, {18, SHIFT, 50}, {29, SHIFT, 51}, {39, SHIFT, 53}, {40, SHIFT, 54}, },
			{{-1, REDUCE, 21}, },
			{{-1, ERROR, 168}, {29, SHIFT, 121}, {31, SHIFT, 122}, {32, SHIFT, 123}, {39, SHIFT, 124}, },
			{{-1, ERROR, 169}, {29, SHIFT, 121}, {31, SHIFT, 122}, {32, SHIFT, 123}, {39, SHIFT, 124}, },
			{{-1, REDUCE, 37}, },
			{{-1, REDUCE, 53}, {8, SHIFT, 87}, {9, SHIFT, 88}, },
			{{-1, REDUCE, 45}, },
			{{-1, REDUCE, 48}, },
			{{-1, REDUCE, 43}, },
			{{-1, ERROR, 175}, {33, SHIFT, 177}, },
			{{-1, REDUCE, 42}, {33, REDUCE, 46}, },
			{{-1, ERROR, 177}, {29, SHIFT, 121}, {31, SHIFT, 122}, {32, SHIFT, 123}, {39, SHIFT, 124}, },
			{{-1, REDUCE, 44}, },
			{{-1, REDUCE, 47}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 6}, },
			{{-1, 7}, {14, 21}, {147, 21}, },
			{{-1, 8}, {13, 20}, {22, 20}, },
			{{-1, 9}, {51, 75}, {77, 103}, },
			{{-1, 10}, },
			{{-1, 35}, },
			{{-1, 28}, {17, 30}, {18, 31}, },
			{{-1, 66}, {16, 29}, {17, 29}, {18, 29}, },
			{{-1, 125}, {28, 36}, {30, 39}, },
			{{-1, 55}, },
			{{-1, 126}, },
			{{-1, 11}, },
			{{-1, 12}, },
			{{-1, 67}, {42, 70}, {65, 92}, },
			{{-1, 95}, {96, 133}, },
			{{-1, 68}, {94, 132}, },
			{{-1, 69}, },
			{{-1, -1}, },
			{{-1, 56}, },
			{{-1, 127}, },
			{{-1, 57}, },
			{{-1, 146}, {93, 128}, {99, 135}, {148, 161}, {159, 161}, },
			{{-1, 129}, {168, 172}, {169, 174}, {177, 178}, },
			{{-1, 130}, {168, 173}, {169, 175}, {177, 179}, },
			{{-1, 131}, {169, 176}, },
			{{-1, 107}, {37, 58}, {43, 71}, {49, 73}, {51, 76}, {77, 104}, {78, 105}, {80, 109}, {100, 136}, {120, 144}, {139, 156}, {149, 162}, {150, 163}, },
			{{-1, 59}, {82, 110}, {83, 111}, {84, 112}, {85, 113}, {86, 114}, {138, 155}, {166, 171}, },
			{{-1, 60}, {87, 115}, {88, 116}, },
			{{-1, 61}, {50, 74}, {89, 117}, {90, 118}, {91, 119}, },
			{{-1, 62}, },
			{{-1, 63}, },
			{{-1, 108}, {151, 165}, },
			{{-1, 140}, {141, 157}, },
			{{-1, 13}, {14, 22}, },
			{{-1, 14}, {121, 147}, },
			{{-1, 148}, {147, 159}, },
			{{-1, 96}, },
			{{-1, 77}, },
			{{-1, 141}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: '>>', 'var', 'const', 'funcao', 'procedimento'",
			"expecting: 'procedimento'",
			"expecting: ':'",
			"expecting: EOF",
			"expecting: '>>', 'var', 'const', 'comece', 'termine', 'enquanto', 'se', 'funcao', 'procedimento', id",
			"expecting: '>>', 'funcao', 'procedimento', EOF",
			"expecting: 'inteiro', 'real', 'booleano', 'cadeia'",
			"expecting: id",
			"expecting: '[', id",
			"expecting: '('",
			"expecting: ';', '<<'",
			"expecting: ';'",
			"expecting: numero, decimal, booleano, '[', '(', 'nao', 'comece', 'se', id, cadeia",
			"expecting: '<<'",
			"expecting: ')', 'inteiro', 'real', 'booleano', 'cadeia'",
			"expecting: ';', ']', ')', '+', '-', '*', '/', '%', '>', '>=', '=', 'e', 'ou', '|', '>>', 'termine', 'senao', 'funcao', 'procedimento', EOF",
			"expecting: numero, decimal, booleano, '(', 'nao', 'comece', id, cadeia",
			"expecting: numero, decimal, booleano, '[', '(', 'nao', 'const', 'comece', 'se', id, cadeia",
			"expecting: ';', '[', ']', '(', ')', '+', '-', '*', '/', '%', '>', '>=', '=', 'e', 'ou', '|', '>>', 'termine', 'senao', 'funcao', 'procedimento', EOF",
			"expecting: ';', ']', ')', '>', '>=', '=', 'e', 'ou', '|', '>>', 'termine', 'funcao', 'procedimento', EOF",
			"expecting: ';', '[', ']', ')', '+', '-', '*', '/', '%', '>', '>=', '=', 'e', 'ou', '|', '>>', 'termine', 'senao', 'funcao', 'procedimento', EOF",
			"expecting: ']', '>', '>=', '=', 'e', 'ou'",
			"expecting: ';', ']', ')', '+', '-', '>', '>=', '=', 'e', 'ou', '|', '>>', 'termine', 'funcao', 'procedimento', EOF",
			"expecting: numero, decimal, booleano, '[', '(', 'nao', '>>', 'var', 'const', 'comece', 'termine', 'enquanto', 'se', 'funcao', 'procedimento', id, cadeia",
			"expecting: ')'",
			"expecting: ')', '|'",
			"expecting: ';', '>', '>=', '=', 'e', 'ou'",
			"expecting: '|'",
			"expecting: ')', '>', '>=', '=', 'e', 'ou'",
			"expecting: '>', '>=', '=', 'e', 'ou', 'termine'",
			"expecting: numero, decimal, booleano, '[', '(', ')', 'nao', 'comece', 'se', id, cadeia",
			"expecting: 'comece', 'enquanto', 'se', id",
			"expecting: ']'",
			"expecting: ')', '>', '>=', '=', 'e', 'ou', '|'",
			"expecting: 'var', 'const', 'comece', 'termine', 'enquanto', 'se', id",
			"expecting: '(', '<<'",
			"expecting: '>>', 'comece', 'termine', 'enquanto', 'se', 'senao', 'funcao', 'procedimento', id, EOF",
			"expecting: '>>', 'comece', 'termine', 'enquanto', 'se', 'funcao', 'procedimento', id, EOF",
			"expecting: '>', '>=', '=', 'e', 'ou', '>>', 'funcao', 'procedimento', EOF",
			"expecting: 'comece', 'termine', 'enquanto', 'se', id",
			"expecting: '+', '-', 'senao'",
			"expecting: 'senao'",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 2, 2, 2, 3, 4, 5, 4, 4, 5, 5, 5, 0, 2, 6, 6, 6, 7, 5, 4, 5, 7, 8, 8, 8, 8, 7, 8, 7, 7, 9, 9, 10, 11, 11, 12, 13, 11, 9, 14, 14, 12, 4, 15, 15, 15, 7, 12, 16, 17, 9, 18, 15, 19, 20, 15, 21, 22, 15, 15, 15, 15, 23, 14, 8, 24, 25, 8, 24, 26, 27, 28, 15, 17, 29, 17, 12, 30, 12, 7, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 24, 31, 6, 25, 25, 32, 25, 31, 12, 15, 15, 17, 29, 28, 15, 33, 24, 21, 22, 22, 22, 22, 22, 15, 15, 15, 15, 15, 12, 34, 9, 9, 35, 11, 36, 11, 5, 37, 37, 36, 25, 25, 8, 5, 21, 15, 16, 12, 25, 25, 15, 20, 38, 36, 39, 34, 39, 12, 12, 30, 36, 36, 19, 40, 33, 25, 36, 39, 36, 39, 28, 28, 11, 24, 16, 36, 31, 31, 11, 22, 37, 36, 37, 41, 36, 31, 37, 36, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
