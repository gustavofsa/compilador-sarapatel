/* This file was generated by SableCC (http://www.sablecc.org/). */

package analysis;

import node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAPrograma(APrograma node);
    void caseADecVarDecs(ADecVarDecs node);
    void caseADecConsDecs(ADecConsDecs node);
    void caseADecCons(ADecCons node);
    void caseADecVar(ADecVar node);
    void caseAIdIds(AIdIds node);
    void caseAIdAtribuicaoIds(AIdAtribuicaoIds node);
    void caseATipoBaseTipo(ATipoBaseTipo node);
    void caseATipoTipo(ATipoTipo node);
    void caseATipoInteiroTipoBase(ATipoInteiroTipoBase node);
    void caseATipoBooleanoTipoBase(ATipoBooleanoTipoBase node);
    void caseATipoRealTipoBase(ATipoRealTipoBase node);
    void caseATipoCadeiaTipoBase(ATipoCadeiaTipoBase node);
    void caseAIdAtribuicao(AIdAtribuicao node);
    void caseAArrayComp(AArrayComp node);
    void caseAParametros(AParametros node);
    void caseAParametroSeparadorParametroSeparadorParametroVazio(AParametroSeparadorParametroSeparadorParametroVazio node);
    void caseAVazioSeparadorParametroVazio(AVazioSeparadorParametroVazio node);
    void caseAParametroSeparadorParametro(AParametroSeparadorParametro node);
    void caseASeparadorParametro(ASeparadorParametro node);
    void caseAParametro(AParametro node);
    void caseATipoBaseTipoParametro(ATipoBaseTipoParametro node);
    void caseATipoParametroTipoParametro(ATipoParametroTipoParametro node);
    void caseAIdIdExp(AIdIdExp node);
    void caseAExpIdExp(AExpIdExp node);
    void caseAFatorExp(AFatorExp node);
    void caseASomaExp(ASomaExp node);
    void caseAMenosExp(AMenosExp node);
    void caseATermoFator(ATermoFator node);
    void caseAMultFator(AMultFator node);
    void caseADivFator(ADivFator node);
    void caseAModFator(AModFator node);
    void caseANumeroTermo(ANumeroTermo node);
    void caseAExpTermo(AExpTermo node);

    void caseTNumero(TNumero node);
    void caseTDecimal(TDecimal node);
    void caseTPontoVirgula(TPontoVirgula node);
    void caseTColEsq(TColEsq node);
    void caseTColDir(TColDir node);
    void caseTParEsq(TParEsq node);
    void caseTParDir(TParDir node);
    void caseTSoma(TSoma node);
    void caseTMenos(TMenos node);
    void caseTMult(TMult node);
    void caseTDiv(TDiv node);
    void caseTMod(TMod node);
    void caseTMaiorQ(TMaiorQ node);
    void caseTMaiorIgual(TMaiorIgual node);
    void caseTIgual(TIgual node);
    void caseTE(TE node);
    void caseTOu(TOu node);
    void caseTNao(TNao node);
    void caseTSeparador(TSeparador node);
    void caseTDoisPontos(TDoisPontos node);
    void caseTAtribuicao(TAtribuicao node);
    void caseTProcedPrincipal(TProcedPrincipal node);
    void caseTVar(TVar node);
    void caseTConst(TConst node);
    void caseTTipoInteiro(TTipoInteiro node);
    void caseTTipoReal(TTipoReal node);
    void caseTTipoBooleano(TTipoBooleano node);
    void caseTTipoCadeia(TTipoCadeia node);
    void caseTIniBloco(TIniBloco node);
    void caseTFimBloco(TFimBloco node);
    void caseTEnquanto(TEnquanto node);
    void caseTSe(TSe node);
    void caseTSenao(TSenao node);
    void caseTVerdadeiro(TVerdadeiro node);
    void caseTFalso(TFalso node);
    void caseTFuncao(TFuncao node);
    void caseTProcedimento(TProcedimento node);
    void caseTTipoArray(TTipoArray node);
    void caseTId(TId node);
    void caseTCadeia(TCadeia node);
    void caseTVazio(TVazio node);
    void caseTComentario(TComentario node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
